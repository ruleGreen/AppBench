[
    {
        "input": "Please book a Hatchback car with insurance to be picked up from Warsaw Chopin Airport on March 7th at 1:30 pm, and returned on March 13th in Warsaw.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Hatchback",
                        "city": "Warsaw",
                        "end_date": "2019-03-13",
                        "pickup_time": "13:30",
                        "start_date": "2019-03-07"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-13",
                        "pickup_location": "Warsaw Chopin Airport",
                        "pickup_time": "13:30",
                        "start_date": "2019-03-07"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Hatchback', #city='Warsaw', #end_date='2019-03-13', #pickup_time='13:30', #start_date='2019-03-07')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Hatchback",
                "city": "Warsaw",
                "end_date": "2019-03-13",
                "pickup_time": "13:30",
                "start_date": "2019-03-07",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Book two train tickets for a trip from Vancouver to Seattle on March 9th at 6:20 am, including travel insurance, departing from Pacific Central Station and arriving at King Street Station, with a total cost of $110.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-09",
                        "from": "Vancouver",
                        "to": "Seattle"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-09",
                        "from": "Vancouver",
                        "journey_start_time": "06:20",
                        "number_of_adults": "2",
                        "to": "Seattle",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-09', #from='Vancouver', #to='Seattle')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-09",
                "from": "Vancouver",
                "to": "Seattle"
            }
        }
    },
    {
        "input": "Find music events in San Francisco on the 1st of March, check the cost of Alex Cameron at August Hall, then explore other events on the 7th of March including Carmina Burana at the San Francisco Symphony, and inquire about the ticket price and venue location.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "San Francisco",
                        "date": "2019-03-01",
                        "event_type": "Music"
                    }
                },
                {
                    "findevents": {
                        "city": "San Francisco",
                        "date": "2019-03-07",
                        "event_type": "Music"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='San Francisco', #date='2019-03-01', #event_type='Music')",
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city=city, #date=date, #event_type=event_type)"
            ],
            "middle_arguments": [
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "San Francisco",
                "date": "2019-03-01",
                "event_type": "Music"
            }
        }
    },
    {
        "input": "I need to rent an Audi A8 Sedan from LAX International Airport on March 13th at 2 pm, return it on March 14th, and decline rental insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Los Angeles",
                        "end_date": "2019-03-14",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-13"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-14",
                        "pickup_location": "LAX International Airport",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-13"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Los Angeles', #end_date='2019-03-14', #pickup_time='14:00', #start_date='2019-03-13')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Los Angeles",
                "end_date": "2019-03-14",
                "pickup_time": "14:00",
                "start_date": "2019-03-13",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Please reserve 1 conditionally refundable train ticket for me departing from Vancouver on March 9th at 6:20 am to Seattle, with travel insurance included.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-09",
                        "from": "Vancouver",
                        "to": "Seattle"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-09",
                        "from": "Vancouver",
                        "journey_start_time": "06:20",
                        "number_of_adults": "1",
                        "to": "Seattle",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-09', #from='Vancouver', #to='Seattle')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-09",
                "from": "Vancouver",
                "to": "Seattle"
            }
        }
    },
    {
        "input": "Find and book one ticket for the Advanced Acting Scene Study event at TGW Acting Studio in New York City on March 5th.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "New York",
                        "date": "2019-03-05",
                        "event_type": "Theater"
                    }
                },
                {
                    "buyeventtickets": {
                        "city": "New York",
                        "date": "2019-03-05",
                        "event_name": "Advanced Acting Scene Study",
                        "number_of_tickets": "1"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_name",
                    "date",
                    "time",
                    "number_of_tickets",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='New York', #date='2019-03-05', #event_type='Theater')",
                "event_name, date, time, number_of_tickets, price_per_ticket, city, venue, venue_address = buyeventtickets(#city=city, #date=date, #event_name=event_name, #number_of_tickets='1')"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "New York",
                "date": "2019-03-05",
                "event_type": "Theater",
                "number_of_tickets": "1"
            }
        }
    },
    {
        "input": "I would like to make a payment of $34 to Diego from my app balance with private visibility turned off.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "34",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Diego"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "86",
                        "private_visibility": "False",
                        "receiver": "Emma"
                    }
                },
                {
                    "makepayment": {
                        "amount": "65",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Amelia"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='34', #payment_method='app balance', #private_visibility='False', #receiver='Diego')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "34",
                "payment_method": "app balance",
                "private_visibility": "False",
                "receiver": "Diego"
            }
        }
    },
    {
        "input": "Transfer $94 privately from your debit card to Wilson.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "9",
                        "private_visibility": "False",
                        "receiver": "Margaret"
                    }
                },
                {
                    "makepayment": {
                        "amount": "94",
                        "payment_method": "debit card",
                        "private_visibility": "True",
                        "receiver": "Wilson"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='9', #private_visibility='False', #receiver='Margaret')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='debit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "9",
                "private_visibility": "False",
                "receiver": "Margaret",
                "payment_method": "debit card"
            }
        }
    },
    {
        "input": "I'd like to purchase 4 bus tickets departing from Fresno to Sacramento on March 1st, without any additional luggage, for the bus leaving at 6:20 am.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-01",
                        "from_city": "Fresno",
                        "to_city": "Sacramento"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-01",
                        "departure_time": "06:20",
                        "from_city": "Fresno",
                        "num_passengers": "4",
                        "to_city": "Sacramento"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-01', #from_city='Fresno', #to_city='Sacramento')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-01",
                "from_city": "Fresno",
                "to_city": "Sacramento",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I would like to book a table for 4 people at a moderately priced Cantonese restaurant in San Jose on March 1st at 5:30 pm, with the specific requirement that the restaurant should have a user rating of at least 4.1 and no outdoor seating.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Chinese",
                        "location": "San Jose",
                        "price_range": "moderate"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Jose",
                        "number_of_seats": "4",
                        "restaurant_name": "China Station Restaurant",
                        "time": "17:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Chinese', #location='San Jose', #price_range='moderate')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location=location, #number_of_seats='4', #restaurant_name=restaurant_name, #time='17:30')"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Chinese",
                "location": "San Jose",
                "price_range": "moderate",
                "date": "2019-03-01",
                "number_of_seats": "4",
                "time": "17:30"
            }
        }
    },
    {
        "input": "Please reserve an Alfa Romeo Stelvio SUV for me to pick up at Union Plaza in Las Vegas on March 6th at 2:00 PM, returning on March 12th, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Las Vegas",
                        "end_date": "2019-03-12",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-06"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "SUV",
                        "end_date": "2019-03-12",
                        "pickup_location": "Union Plaza",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-06"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Las Vegas', #end_date='2019-03-12', #pickup_time='14:00', #start_date='2019-03-06')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Las Vegas",
                "end_date": "2019-03-12",
                "pickup_time": "14:00",
                "start_date": "2019-03-06",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Please help me find a bus from Long Beach to San Francisco on March 6th at 6:20 am without additional luggage, and book three tickets for me.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-06",
                        "from_city": "Long Beach",
                        "to_city": "San Francisco"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-06",
                        "departure_time": "06:20",
                        "from_city": "Long Beach",
                        "num_passengers": "3",
                        "to_city": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-06', #from_city='Long Beach', #to_city='San Francisco')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-06",
                "from_city": "Long Beach",
                "to_city": "San Francisco",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Please help me find a theater event in Chicago on March 13th, like Broadway, and assist me in purchasing 2 tickets for the event \"All That He Was\" at The Buena, Pride Arts Center, with each ticket costing $25.",
        "output": {
            "used_app": [
                "Events",
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Chicago",
                        "date": "2019-03-13",
                        "event_type": "Theater"
                    }
                },
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-01",
                        "event_type": "Theater"
                    }
                },
                {
                    "buyeventtickets": {
                        "city": "Los Angeles",
                        "date": "2019-03-01",
                        "event_name": "A Year In Dragonfly",
                        "number_of_tickets": "2"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_name",
                    "date",
                    "time",
                    "number_of_tickets",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Chicago', #date='2019-03-13', #event_type='Theater')",
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city=city, #date=date, #event_type=event_type)",
                "event_name, date, time, number_of_tickets, price_per_ticket, city, venue, venue_address = buyeventtickets(#city=city, #date=date, #event_name=event_name, #number_of_tickets='2')"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Chicago",
                "date": "2019-03-13",
                "event_type": "Theater",
                "number_of_tickets": "2"
            }
        }
    },
    {
        "input": "I'd like to book a train ticket from Philadelphia to Washington on March 4th, with a departure time of 8:30 am, and I would like the ticket to be conditionally refundable.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "class": "Value",
                        "date_of_journey": "2019-03-04",
                        "from": "Philadelphia",
                        "to": "Washington"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-04",
                        "from": "Philadelphia",
                        "journey_start_time": "08:30",
                        "number_of_adults": "1",
                        "to": "Washington",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class='Value', #date_of_journey='2019-03-04', #from='Philadelphia', #to='Washington')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "class": "Value",
                "date_of_journey": "2019-03-04",
                "from": "Philadelphia",
                "to": "Washington"
            }
        }
    },
    {
        "input": "Please search for a business class locomotive ticket for 1 adult with a conditionally refundable option departing from San Diego to Anaheim on March 11th, and proceed with booking including travel insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "class": "Business",
                        "date_of_journey": "2019-03-11",
                        "from": "San Diego",
                        "number_of_adults": "1",
                        "to": "Anaheim"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Business",
                        "date_of_journey": "2019-03-11",
                        "from": "San Diego",
                        "journey_start_time": "08:30",
                        "number_of_adults": "1",
                        "to": "Anaheim",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class='Business', #date_of_journey='2019-03-11', #from='San Diego', #number_of_adults='1', #to='Anaheim')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "class": "Business",
                "date_of_journey": "2019-03-11",
                "from": "San Diego",
                "number_of_adults": "1",
                "to": "Anaheim"
            }
        }
    },
    {
        "input": "Inquire about the availability of a one-stop bus for three people departing from Sacramento on March 14th to San Diego, departing at 7:40 am, costing $65, and traveling from 65th Light Rail Station to El Cajon Bus Stop.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-09",
                        "from_city": "Sacramento",
                        "to_city": "San Diego"
                    }
                },
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-14",
                        "from_city": "Sacramento",
                        "num_passengers": "3",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='one-stop', #departure_date='2019-03-09', #from_city='Sacramento', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "one-stop",
                "departure_date": "2019-03-09",
                "from_city": "Sacramento",
                "to_city": "San Diego"
            }
        }
    },
    {
        "input": "I need to book 1 economy train ticket with trip insurance from Seattle, WA to Portland, OR for the 4th of March departing at 8 am.",
        "output": {
            "used_app": [
                "Trains",
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-04",
                        "from": "Vancouver",
                        "to": "Portland"
                    }
                },
                {
                    "findtrains": {
                        "class": "Value",
                        "date_of_journey": "2019-03-04",
                        "from": "Seattle",
                        "to": "Portland"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-04",
                        "from": "Seattle",
                        "journey_start_time": "08:00",
                        "number_of_adults": "1",
                        "to": "Portland",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-04', #from='Vancouver', #to='Portland')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class=class, #date_of_journey=date_of_journey, #from=from, #to=to)",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-04",
                "from": "Vancouver",
                "to": "Portland"
            }
        }
    },
    {
        "input": "Instruct the system to confirm the rental car reservation with insurance for a Audi A8 sedan from Anaheim Intermodal Center starting on March 6th at 5 pm and ending on March 10th.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Anaheim",
                        "end_date": "2019-03-10",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-06"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Sedan",
                        "end_date": "2019-03-10",
                        "pickup_location": "Anaheim Intermodal Center",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-06"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Anaheim', #end_date='2019-03-10', #pickup_time='17:00', #start_date='2019-03-06')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Anaheim",
                "end_date": "2019-03-10",
                "pickup_time": "17:00",
                "start_date": "2019-03-06",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Book a Dodge Charger Sedan from Union Station in Washington starting on March 3rd at 5:00 pm and returning on March 7th, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Washington",
                        "end_date": "2019-03-07",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-03"
                    }
                },
                {
                    "getcarsavailable": {
                        "city": "Washington",
                        "end_date": "2019-03-04",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-03"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-04",
                        "pickup_location": "Union Station",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-03"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Washington', #end_date='2019-03-07', #pickup_time='17:00', #start_date='2019-03-03')",
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city=city, #end_date=end_date, #pickup_time=pickup_time, #start_date=start_date)",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Washington",
                "end_date": "2019-03-07",
                "pickup_time": "17:00",
                "start_date": "2019-03-03",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Make a payment of $110 to Tom from your debit card, ensure it is not visible to the public.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "110",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Tom"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "161",
                        "private_visibility": "False",
                        "receiver": "Jerry"
                    }
                },
                {
                    "makepayment": {
                        "amount": "79",
                        "payment_method": "app balance",
                        "private_visibility": "True",
                        "receiver": "Victoria"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='110', #payment_method='debit card', #private_visibility='False', #receiver='Tom')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "110",
                "payment_method": "debit card",
                "private_visibility": "False",
                "receiver": "Tom"
            }
        }
    },
    {
        "input": "I want to make a payment of 166 bucks from my debit card to Rachel with private visibility off.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "166",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Rachel"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "94",
                        "private_visibility": "False",
                        "receiver": "Margaret"
                    }
                },
                {
                    "makepayment": {
                        "amount": "16",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Isabella"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='166', #payment_method='debit card', #private_visibility='False', #receiver='Rachel')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "166",
                "payment_method": "debit card",
                "private_visibility": "False",
                "receiver": "Rachel"
            }
        }
    },
    {
        "input": "Book a table for 2 people at Vina Enoteca in Palo Alto at 12:30 pm on March 1st, with Italian cuisine, outdoor seating, vegetarian options, and a preference for Pizza and Pasta.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Italian",
                        "has_seating_outdoors": "True",
                        "has_vegetarian_options": "True",
                        "location": "Palo Alto"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "Palo Alto",
                        "number_of_seats": "2",
                        "restaurant_name": "Vina Enoteca",
                        "time": "16:30"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "Palo Alto",
                        "number_of_seats": "2",
                        "restaurant_name": "Vina Enoteca",
                        "time": "12:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Italian', #has_seating_outdoors='True', #has_vegetarian_options='True', #location='Palo Alto')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='16:30')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Italian",
                "has_seating_outdoors": "True",
                "has_vegetarian_options": "True",
                "location": "Palo Alto",
                "date": "2019-03-01",
                "number_of_seats": "2",
                "time": "16:30"
            }
        }
    },
    {
        "input": "I want to ask Amelia to pay me $155, and I want the transaction to be private, using a credit card as the payment method.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "155",
                        "private_visibility": "False",
                        "receiver": "Amelia"
                    }
                },
                {
                    "makepayment": {
                        "amount": "119",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Svetlana"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='155', #private_visibility='False', #receiver='Amelia')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='credit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "155",
                "private_visibility": "False",
                "receiver": "Amelia",
                "payment_method": "credit card"
            }
        }
    },
    {
        "input": "I would like to purchase 1 ticket for the regular movie \"Hustlers\" on March 9th at 11:00 PM in Santa Clara, and if unsuccessful, I would like to try purchasing it for Walnut Creek on March 5th at 9:45 PM.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "buymovietickets": {
                        "location": "Santa Clara",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-09",
                        "show_time": "23:00",
                        "show_type": "regular"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Walnut Creek",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-05",
                        "show_time": "21:45",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location='Santa Clara', #movie_name='Hustlers', #number_of_tickets='1', #show_date='2019-03-09', #show_time='23:00', #show_type='regular')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets=number_of_tickets, #show_date=show_date, #show_time=show_time, #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "show_time",
                "street_address",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Santa Clara",
                "movie_name": "Hustlers",
                "number_of_tickets": "1",
                "show_date": "2019-03-09",
                "show_time": "23:00",
                "show_type": "regular"
            }
        }
    },
    {
        "input": "I would like to rent an SUV car from San Diego starting on March 4th at 2:15 PM until March 5th, and I would like to add insurance to the booking.",
        "output": {
            "used_app": [
                "Rents",
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "SUV",
                        "city": "San Diego",
                        "end_date": "2019-03-05",
                        "pickup_time": "14:15",
                        "start_date": "2019-03-04"
                    }
                },
                {
                    "getcarsavailable": {
                        "car_type": "SUV",
                        "city": "San Diego",
                        "end_date": "2019-03-05",
                        "pickup_time": "12:00",
                        "start_date": "2019-03-04"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "SUV",
                        "end_date": "2019-03-05",
                        "pickup_location": "SAN International Airport",
                        "pickup_time": "12:00",
                        "start_date": "2019-03-04"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='SUV', #city='San Diego', #end_date='2019-03-05', #pickup_time='14:15', #start_date='2019-03-04')",
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type=car_type, #city=city, #end_date=end_date, #pickup_time=pickup_time, #start_date=start_date)",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "SUV",
                "city": "San Diego",
                "end_date": "2019-03-05",
                "pickup_time": "14:15",
                "start_date": "2019-03-04",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Make a payment of $123 to Wilson from your app balance, ensuring the transaction is not private, and confirm the payment before finalizing it.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "123",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Wilson"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "80",
                        "private_visibility": "False",
                        "receiver": "Rachel"
                    }
                },
                {
                    "makepayment": {
                        "amount": "45",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Jerry"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='123', #payment_method='app balance', #private_visibility='False', #receiver='Wilson')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "123",
                "payment_method": "app balance",
                "private_visibility": "False",
                "receiver": "Wilson"
            }
        }
    },
    {
        "input": "I would like to purchase a bus ticket for one person departing from Fresno on March 1st at 7:40 am, going to Las Vegas, without any additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-01",
                        "from_city": "Fresno",
                        "to_city": "Las Vegas"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-01",
                        "departure_time": "07:40",
                        "from_city": "Fresno",
                        "num_passengers": "1",
                        "to_city": "Las Vegas"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-01', #from_city='Fresno', #to_city='Las Vegas')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-01",
                "from_city": "Fresno",
                "to_city": "Las Vegas",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Book a business class ticket for a train departing from Vancouver to Portland on March 6th at 6:50 am, ensuring one seat is reserved for a single adult traveler.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "class": "Business",
                        "date_of_journey": "2019-03-06",
                        "from": "Vancouver",
                        "number_of_adults": "1",
                        "to": "Portland"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Business",
                        "date_of_journey": "2019-03-06",
                        "from": "Vancouver",
                        "journey_start_time": "06:50",
                        "number_of_adults": "1",
                        "to": "Portland",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class='Business', #date_of_journey='2019-03-06', #from='Vancouver', #number_of_adults='1', #to='Portland')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "class": "Business",
                "date_of_journey": "2019-03-06",
                "from": "Vancouver",
                "number_of_adults": "1",
                "to": "Portland"
            }
        }
    },
    {
        "input": "I would like to book a Flexible train ticket for one person from San Francisco to Los Angeles departing on March 8th, 2019.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-08",
                        "from": "San Francisco",
                        "to": "Los Angeles"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-08",
                        "from": "San Francisco",
                        "journey_start_time": "06:20",
                        "number_of_adults": "1",
                        "to": "Los Angeles",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-08', #from='San Francisco', #to='Los Angeles')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-08",
                "from": "San Francisco",
                "to": "Los Angeles"
            }
        }
    },
    {
        "input": "Please find a train for 3 seats departing from Fresno to Los Angeles on March 12th, with a departure time of 8:30 am, and ensure the booking includes trip insurance and economy tickets.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-12",
                        "from": "Fresno",
                        "number_of_adults": "3",
                        "to": "Los Angeles"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-12",
                        "from": "Fresno",
                        "journey_start_time": "08:30",
                        "number_of_adults": "3",
                        "to": "Los Angeles",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-12', #from='Fresno', #number_of_adults='3', #to='Los Angeles')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-12",
                "from": "Fresno",
                "number_of_adults": "3",
                "to": "Los Angeles"
            }
        }
    },
    {
        "input": "Play the song Birth Of The Cruel by Slipknot from the album We Are Not Your Kind, a Rock song from 2019, on the living room speaker.",
        "output": {
            "used_app": [
                "Music",
                "Music"
            ],
            "used_api": [
                {
                    "lookupmusic": {
                        "album": "We Are Not Your Kind",
                        "genre": "Rock",
                        "year": "2019"
                    }
                },
                {
                    "playmedia": {
                        "album": "We Are Not Your Kind",
                        "device": "Living room",
                        "track": "Birth Of The Cruel"
                    }
                }
            ],
            "result_arguments": [
                [
                    "track",
                    "artist",
                    "album",
                    "genre",
                    "year"
                ],
                [
                    "track",
                    "artist",
                    "album",
                    "genre",
                    "year",
                    "device"
                ]
            ],
            "api_results": [
                "track, artist, album, genre, year = lookupmusic(#album='We Are Not Your Kind', #genre='Rock', #year='2019')",
                "track, artist, album, genre, year, device = playmedia(#album=album, #device='Living room', #track=track)"
            ],
            "middle_arguments": [
                "artist",
                "device",
                "album",
                "track",
                "genre",
                "year"
            ],
            "user_aware_arguments": {
                "album": "We Are Not Your Kind",
                "genre": "Rock",
                "year": "2019",
                "device": "Living room"
            }
        }
    },
    {
        "input": "Book a reservation for 2 people at an Asian restaurant in San Mateo, specifically Izakaya Ginji, for March 1st at 1:30 pm, ensuring it is not very costly.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Asian",
                        "location": "San Mateo",
                        "price_range": "moderate"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Mateo",
                        "number_of_seats": "2",
                        "restaurant_name": "Izakaya Ginji",
                        "time": "13:45"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Mateo",
                        "number_of_seats": "2",
                        "restaurant_name": "Izakaya Ginji",
                        "time": "13:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Asian', #location='San Mateo', #price_range='moderate')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='13:45')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Asian",
                "location": "San Mateo",
                "price_range": "moderate",
                "date": "2019-03-01",
                "number_of_seats": "2",
                "time": "13:45"
            }
        }
    },
    {
        "input": "Please find me an affordable Spicy Indian restaurant in Sunnyvale, like Arka Indian Restaurant, with great vegetarian options, a rating of 3.8 stars, and book a table for 2 on March 14th at 12:00, and provide me with their phone number.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Indian",
                        "location": "Sunnyvale",
                        "price_range": "moderate"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-14",
                        "location": "Sunnyvale",
                        "number_of_seats": "2",
                        "restaurant_name": "Arka Indian Restaurant",
                        "time": "12:00"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Indian', #location='Sunnyvale', #price_range='moderate')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-14', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='12:00')"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Indian",
                "location": "Sunnyvale",
                "price_range": "moderate",
                "date": "2019-03-14",
                "number_of_seats": "2",
                "time": "12:00"
            }
        }
    },
    {
        "input": "Find a luxurious train departing from Fresno to Anaheim on the 1st of this month, requiring 4 tickets, with a departure time at 9:30 am and a total cost of $397.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-01",
                        "from": "Fresno",
                        "to": "Anaheim"
                    }
                },
                {
                    "findtrains": {
                        "class": "Business",
                        "date_of_journey": "2019-03-01",
                        "from": "Fresno",
                        "number_of_adults": "4",
                        "to": "Anaheim"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-01', #from='Fresno', #to='Anaheim')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class=class, #date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-01",
                "from": "Fresno",
                "to": "Anaheim"
            }
        }
    },
    {
        "input": "Please help me find a regular show to watch at Roxy Stadium 14 in Santa Rosa, and then proceed to purchase 2 tickets for the movie \"Good Boys\" on March 3rd at 9:30 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "location": "Santa Rosa",
                        "show_type": "regular",
                        "theater_name": "Roxy Stadium 14"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Santa Rosa",
                        "movie_name": "Good Boys",
                        "number_of_tickets": "2",
                        "show_date": "2019-03-03",
                        "show_time": "21:30",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#location='Santa Rosa', #show_type='regular', #theater_name='Roxy Stadium 14')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='2', #show_date='2019-03-03', #show_time='21:30', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Santa Rosa",
                "show_type": "regular",
                "theater_name": "Roxy Stadium 14",
                "number_of_tickets": "2",
                "show_date": "2019-03-03",
                "show_time": "21:30"
            }
        }
    },
    {
        "input": "Find and purchase 1 ticket for the 3D family movie \"The Farewell\" showing in San Jose on March 4th at 10 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "genre": "Family",
                        "location": "San Jose",
                        "show_type": "3d"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "San Jose",
                        "movie_name": "The Farewell",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-04",
                        "show_time": "22:00",
                        "show_type": "3d"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#genre='Family', #location='San Jose', #show_type='3d')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='1', #show_date='2019-03-04', #show_time='22:00', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "genre": "Family",
                "location": "San Jose",
                "show_type": "3d",
                "number_of_tickets": "1",
                "show_date": "2019-03-04",
                "show_time": "22:00"
            }
        }
    },
    {
        "input": "Find me a rental car in Rio de Janeiro from March 4th at 19:30 until March 11th without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Rio de Janeiro",
                        "end_date": "2019-03-11",
                        "pickup_time": "19:30",
                        "start_date": "2019-03-04"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-11",
                        "pickup_location": "Galeao International Airport",
                        "pickup_time": "19:30",
                        "start_date": "2019-03-04"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Rio de Janeiro', #end_date='2019-03-11', #pickup_time='19:30', #start_date='2019-03-04')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Rio de Janeiro",
                "end_date": "2019-03-11",
                "pickup_time": "19:30",
                "start_date": "2019-03-04",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Please try again. I wish to see an IMAX show of The Lord of the Rings: The Return of the King in Livermore at 6:15 pm on March 6th with 1 ticket.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "buymovietickets": {
                        "location": "Livermore",
                        "movie_name": "The Lord of the Rings: The Return of the King",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-06",
                        "show_time": "18:00",
                        "show_type": "3d"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Livermore",
                        "movie_name": "The Lord of the Rings: The Return of the King",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-06",
                        "show_time": "18:15",
                        "show_type": "imax"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location='Livermore', #movie_name='The Lord of the Rings: The Return of the King', #number_of_tickets='1', #show_date='2019-03-06', #show_time='18:00', #show_type='3d')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets=number_of_tickets, #show_date=show_date, #show_time=show_time, #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "show_time",
                "street_address",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Livermore",
                "movie_name": "The Lord of the Rings: The Return of the King",
                "number_of_tickets": "1",
                "show_date": "2019-03-06",
                "show_time": "18:00",
                "show_type": "3d"
            }
        }
    },
    {
        "input": "I would like to reserve a Alfa Romeo Stelvio SUV rental car with insurance for pickup at Dulles International Airport in Washington on March 5th at 1:30 pm and return on March 8th.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Washington",
                        "end_date": "2019-03-08",
                        "pickup_time": "13:30",
                        "start_date": "2019-03-05"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "SUV",
                        "end_date": "2019-03-08",
                        "pickup_location": "Dulles International Airport",
                        "pickup_time": "13:30",
                        "start_date": "2019-03-05"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Washington', #end_date='2019-03-08', #pickup_time='13:30', #start_date='2019-03-05')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Washington",
                "end_date": "2019-03-08",
                "pickup_time": "13:30",
                "start_date": "2019-03-05",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Find me a music event in Los Angeles on March 13th with 3 tickets available.",
        "output": {
            "used_app": [
                "Events",
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-13",
                        "event_type": "Music"
                    }
                },
                {
                    "findevents": {
                        "city": "Portland",
                        "date": "2019-03-11",
                        "event_type": "Music"
                    }
                },
                {
                    "buyeventtickets": {
                        "city": "Portland",
                        "date": "2019-03-11",
                        "event_name": "Bastille",
                        "number_of_tickets": "3"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_name",
                    "date",
                    "time",
                    "number_of_tickets",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Los Angeles', #date='2019-03-13', #event_type='Music')",
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city=city, #date=date, #event_type=event_type)",
                "event_name, date, time, number_of_tickets, price_per_ticket, city, venue, venue_address = buyeventtickets(#city=city, #date=date, #event_name=event_name, #number_of_tickets='3')"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Los Angeles",
                "date": "2019-03-13",
                "event_type": "Music",
                "number_of_tickets": "3"
            }
        }
    },
    {
        "input": "Play the song Alive by Sia from the album This Is Acting, released in 2013, in the Pop genre, on the Patio speaker.",
        "output": {
            "used_app": [
                "Music",
                "Music"
            ],
            "used_api": [
                {
                    "lookupmusic": {
                        "album": "This Is Acting",
                        "artist": "Sia",
                        "genre": "Pop"
                    }
                },
                {
                    "playmedia": {
                        "album": "This Is Acting",
                        "artist": "Sia",
                        "device": "Patio",
                        "track": "Alive"
                    }
                }
            ],
            "result_arguments": [
                [
                    "track",
                    "artist",
                    "album",
                    "genre",
                    "year"
                ],
                [
                    "track",
                    "artist",
                    "album",
                    "genre",
                    "year",
                    "device"
                ]
            ],
            "api_results": [
                "track, artist, album, genre, year = lookupmusic(#album='This Is Acting', #artist='Sia', #genre='Pop')",
                "track, artist, album, genre, year, device = playmedia(#album=album, #artist=artist, #device='Patio', #track=track)"
            ],
            "middle_arguments": [
                "artist",
                "device",
                "album",
                "track",
                "genre",
                "year"
            ],
            "user_aware_arguments": {
                "album": "This Is Acting",
                "artist": "Sia",
                "genre": "Pop",
                "device": "Patio"
            }
        }
    },
    {
        "input": "Request a payment of 164 bucks from Isabella, ensuring it is not visible to the public, and then make a payment of 109 bucks to Wilson using app balance.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "164",
                        "private_visibility": "False",
                        "receiver": "Isabella"
                    }
                },
                {
                    "makepayment": {
                        "amount": "109",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Wilson"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='164', #private_visibility='False', #receiver='Isabella')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='app balance', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "164",
                "private_visibility": "False",
                "receiver": "Isabella",
                "payment_method": "app balance"
            }
        }
    },
    {
        "input": "Find and purchase 3 tickets for a bus departing from Long Beach to San Francisco on March 3rd at 6:20 am, costing $48 each, ensuring it is a direct bus and arriving at Transbay Terminal.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-03",
                        "from_city": "Long Beach",
                        "to_city": "San Francisco"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-03",
                        "departure_time": "06:20",
                        "from_city": "Long Beach",
                        "num_passengers": "3",
                        "to_city": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-03', #from_city='Long Beach', #to_city='San Francisco')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-03",
                "from_city": "Long Beach",
                "to_city": "San Francisco",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I would like to reserve a Sedan car, specifically an Audi A8, from Benito Juarez International Airport in Mexico City, starting on March 3rd at 6:30 pm and ending on March 6th, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Mexico City",
                        "end_date": "2019-03-06",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-03"
                    }
                },
                {
                    "getcarsavailable": {
                        "city": "Mexico City",
                        "end_date": "2019-03-04",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-03"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-04",
                        "pickup_location": "Benito Juarez International Airport",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-03"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Mexico City', #end_date='2019-03-06', #pickup_time='18:30', #start_date='2019-03-03')",
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city=city, #end_date=end_date, #pickup_time=pickup_time, #start_date=start_date)",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Mexico City",
                "end_date": "2019-03-06",
                "pickup_time": "18:30",
                "start_date": "2019-03-03",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Inquire about rental cars in Delhi, specify pick up on the 11th of this month at 1:30 pm and return on the 12th, explore options, confirm reservation for a Sedan car without insurance for pick up at Indira Gandhi International Airport.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Delhi",
                        "end_date": "2019-03-12",
                        "pickup_time": "13:30",
                        "start_date": "2019-03-11"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-12",
                        "pickup_location": "Indira Gandhi International Airport",
                        "pickup_time": "13:30",
                        "start_date": "2019-03-11"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Delhi', #end_date='2019-03-12', #pickup_time='13:30', #start_date='2019-03-11')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Delhi",
                "end_date": "2019-03-12",
                "pickup_time": "13:30",
                "start_date": "2019-03-11",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Book a flexible economy premium train ticket for 1 person from Chicago Union Station to Washington Union Station on March 9th, departing at 11:50 am.",
        "output": {
            "used_app": [
                "Trains",
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-09",
                        "from": "Chicago",
                        "to": "Washington"
                    }
                },
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-09",
                        "from": "Chicago",
                        "number_of_adults": "1",
                        "to": "Washington"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-09",
                        "from": "Chicago",
                        "journey_start_time": "11:50",
                        "number_of_adults": "1",
                        "to": "Washington",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-09', #from='Chicago', #to='Washington')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-09",
                "from": "Chicago",
                "to": "Washington"
            }
        }
    },
    {
        "input": "Book one IMAX ticket for IT Chapter Two at Century Blackhawk Plaza in Danville for the show on March 3rd at 10:30 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "location": "Danville",
                        "show_type": "imax",
                        "theater_name": "Century Blackhawk Plaza"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Danville",
                        "movie_name": "IT Chapter Two",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-03",
                        "show_time": "22:30",
                        "show_type": "imax"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#location='Danville', #show_type='imax', #theater_name='Century Blackhawk Plaza')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='1', #show_date='2019-03-03', #show_time='22:30', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Danville",
                "show_type": "imax",
                "theater_name": "Century Blackhawk Plaza",
                "number_of_tickets": "1",
                "show_date": "2019-03-03",
                "show_time": "22:30"
            }
        }
    },
    {
        "input": "Please set up a payment transaction with Wilson for $44 from my app balance, with public visibility.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "44",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Wilson"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "53",
                        "private_visibility": "True",
                        "receiver": "Amelia"
                    }
                },
                {
                    "makepayment": {
                        "amount": "73",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Mahmoud"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='44', #payment_method='app balance', #private_visibility='False', #receiver='Wilson')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "44",
                "payment_method": "app balance",
                "private_visibility": "False",
                "receiver": "Wilson"
            }
        }
    },
    {
        "input": "Find a house in Long Beach, CA with a rating of 4.2 or higher for 2 people, and provide alternative options if the initial choice does not meet the criteria.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "number_of_adults": "1",
                        "rating": "4.20",
                        "where_to": "Long Beach"
                    }
                },
                {
                    "searchhouse": {
                        "number_of_adults": "2",
                        "rating": "4.20",
                        "where_to": "Long Beach"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#number_of_adults='1', #rating='4.20', #where_to='Long Beach')",
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#number_of_adults=number_of_adults, #rating=rating, #where_to=where_to)"
            ],
            "middle_arguments": [
                "total_price",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "number_of_adults": "1",
                "rating": "4.20",
                "where_to": "Long Beach"
            }
        }
    },
    {
        "input": "I would like to reserve a hatchback car from Santa Fe Depot in San Diego at 7:30 pm on March 9th until March 12th, and add insurance to the reservation.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Hatchback",
                        "city": "San Diego",
                        "end_date": "2019-03-12",
                        "pickup_time": "19:30",
                        "start_date": "2019-03-09"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-12",
                        "pickup_location": "Santa Fe Depot",
                        "pickup_time": "19:30",
                        "start_date": "2019-03-09"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Hatchback', #city='San Diego', #end_date='2019-03-12', #pickup_time='19:30', #start_date='2019-03-09')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Hatchback",
                "city": "San Diego",
                "end_date": "2019-03-12",
                "pickup_time": "19:30",
                "start_date": "2019-03-09",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Inquire about outdoor seating and vegetarian options at restaurants in Bolinas, specifically Coast Cafe, and make a reservation for 2 people at 6:30 pm on March 14th.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Vegetarian",
                        "has_seating_outdoors": "True",
                        "location": "Bolinas"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-14",
                        "location": "Bolinas",
                        "number_of_seats": "2",
                        "restaurant_name": "Coast Cafe",
                        "time": "18:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Vegetarian', #has_seating_outdoors='True', #location='Bolinas')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-14', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='18:30')"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Vegetarian",
                "has_seating_outdoors": "True",
                "location": "Bolinas",
                "date": "2019-03-14",
                "number_of_seats": "2",
                "time": "18:30"
            }
        }
    },
    {
        "input": "I would like to request a payment of $157 to Isabella using a debit card, ensuring that the transaction remains private.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "157",
                        "private_visibility": "False",
                        "receiver": "Isabella"
                    }
                },
                {
                    "makepayment": {
                        "amount": "51",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Peter"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='157', #private_visibility='False', #receiver='Isabella')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='debit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "157",
                "private_visibility": "False",
                "receiver": "Isabella",
                "payment_method": "debit card"
            }
        }
    },
    {
        "input": "Inquire about bus options for a trip from Seattle to Portland on March 11th, and then change the destination to Vancouver, BC, and confirm the 6:10 AM bus with a $29 fare.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-11",
                        "from_city": "Seattle",
                        "to_city": "Portland"
                    }
                },
                {
                    "findbus": {
                        "departure_date": "2019-03-11",
                        "from_city": "Seattle",
                        "to_city": "Vancouver"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-11', #from_city='Seattle', #to_city='Portland')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date=departure_date, #from_city=from_city, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-11",
                "from_city": "Seattle",
                "to_city": "Portland"
            }
        }
    },
    {
        "input": "Find and purchase 2 regular tickets for the movie \"IT Chapter Two\" at Regal Jack London theater in Oakland for the show on March 7th at 9:45 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "location": "Oakland",
                        "show_type": "regular",
                        "theater_name": "Regal Jack London"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Oakland",
                        "movie_name": "IT Chapter Two",
                        "number_of_tickets": "2",
                        "show_date": "2019-03-07",
                        "show_time": "21:45",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#location='Oakland', #show_type='regular', #theater_name='Regal Jack London')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='2', #show_date='2019-03-07', #show_time='21:45', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Oakland",
                "show_type": "regular",
                "theater_name": "Regal Jack London",
                "number_of_tickets": "2",
                "show_date": "2019-03-07",
                "show_time": "21:45"
            }
        }
    },
    {
        "input": "I would like to rent a Dodge Charger Sedan from Intercity Terminal in Philadelphia on March 8th at 15:00 and return it on March 14th, without adding any insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Philadelphia",
                        "end_date": "2019-03-14",
                        "pickup_time": "15:00",
                        "start_date": "2019-03-08"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-14",
                        "pickup_location": "Intercity Terminal",
                        "pickup_time": "15:00",
                        "start_date": "2019-03-08"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Philadelphia', #end_date='2019-03-14', #pickup_time='15:00', #start_date='2019-03-08')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Philadelphia",
                "end_date": "2019-03-14",
                "pickup_time": "15:00",
                "start_date": "2019-03-08",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "I'd like to book a table for 1 at Miramar Beach Restaurant in Half Moon Bay this Sunday at 11:15 am, please provide the address and user rating, and confirm the reservation for 1 at 11:30 am on March 3rd.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "reserverestaurant": {
                        "date": "2019-03-03",
                        "location": "Half Moon Bay",
                        "number_of_seats": "1",
                        "restaurant_name": "Miramar Beach Restaurant",
                        "time": "11:15"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-03",
                        "location": "Half Moon Bay",
                        "number_of_seats": "1",
                        "restaurant_name": "Miramar Beach Restaurant",
                        "time": "11:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-03', #location='Half Moon Bay', #number_of_seats='1', #restaurant_name='Miramar Beach Restaurant', #time='11:15')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "rating",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "date"
            ],
            "user_aware_arguments": {
                "date": "2019-03-03",
                "location": "Half Moon Bay",
                "number_of_seats": "1",
                "restaurant_name": "Miramar Beach Restaurant",
                "time": "11:15"
            }
        }
    },
    {
        "input": "I would like to book a train ticket for one person from New York to Washington on March 12th, specifically on the train departing at 7:20 am, including travel insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-12",
                        "from": "New York",
                        "to": "Washington"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-12",
                        "from": "New York",
                        "journey_start_time": "07:20",
                        "number_of_adults": "1",
                        "to": "Washington",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-12', #from='New York', #to='Washington')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-12",
                "from": "New York",
                "to": "Washington"
            }
        }
    },
    {
        "input": "Find a direct bus from Portland to Seattle on the 4th of this month, departing at 11:20 am for $32, but do not book it at the moment.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-04",
                        "from_city": "Portland",
                        "to_city": "Seattle"
                    }
                },
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-04",
                        "from_city": "Portland",
                        "to_city": "Seattle"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-04', #from_city='Portland', #to_city='Seattle')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-04",
                "from_city": "Portland",
                "to_city": "Seattle"
            }
        }
    },
    {
        "input": "Please reserve a SUV from Hartsfield-Jackson International Airport in Atlanta to be picked up at 17:00 on March 11th and returned on March 12th without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Atlanta",
                        "end_date": "2019-03-12",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-11"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "SUV",
                        "end_date": "2019-03-12",
                        "pickup_location": "Hartsfield-Jackson International Airport",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-11"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Atlanta', #end_date='2019-03-12', #pickup_time='17:00', #start_date='2019-03-11')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Atlanta",
                "end_date": "2019-03-12",
                "pickup_time": "17:00",
                "start_date": "2019-03-11",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Instruct the system to reserve 4 tickets for the bus departing from Anaheim to San Francisco at 9:10 am on March 2nd, with tickets priced at $51 each, and ensure the arrival station is the Transbay Terminal.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-02",
                        "from_city": "Anaheim",
                        "to_city": "San Francisco"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-02",
                        "departure_time": "09:10",
                        "from_city": "Anaheim",
                        "num_passengers": "4",
                        "to_city": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-02', #from_city='Anaheim', #to_city='San Francisco')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-02",
                "from_city": "Anaheim",
                "to_city": "San Francisco",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I need to book 2 bus tickets from Portland to Seattle for March 9th departing at 11:20 am.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-09",
                        "from_city": "Portland",
                        "num_passengers": "2",
                        "to_city": "Seattle"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-09",
                        "departure_time": "11:20",
                        "from_city": "Portland",
                        "num_passengers": "2",
                        "to_city": "Seattle"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-09', #from_city='Portland', #num_passengers='2', #to_city='Seattle')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-09",
                "from_city": "Portland",
                "num_passengers": "2",
                "to_city": "Seattle",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Find a Sedan rental car for pick up at 18:30 in Cape Town, starting on the 10th of March and returning on the 14th of March, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Sedan",
                        "city": "Cape Town",
                        "end_date": "2019-03-14",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-10"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-14",
                        "pickup_location": "Cape Town International Airport",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-10"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Sedan', #city='Cape Town', #end_date='2019-03-14', #pickup_time='18:30', #start_date='2019-03-10')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Sedan",
                "city": "Cape Town",
                "end_date": "2019-03-14",
                "pickup_time": "18:30",
                "start_date": "2019-03-10",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "I want to book two direct bus tickets from Sacramento to Los Angeles on March 11th, with additional luggage, departing at 7:50 am from Anaheim Bus Station to North Hollywood Station.",
        "output": {
            "used_app": [
                "Buses",
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-11",
                        "from_city": "Sacramento",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-11",
                        "from_city": "Anaheim",
                        "num_passengers": "2",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-11",
                        "departure_time": "07:50",
                        "from_city": "Anaheim",
                        "num_passengers": "2",
                        "to_city": "Los Angeles"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-11', #from_city='Sacramento', #to_city='Los Angeles')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-11",
                "from_city": "Sacramento",
                "to_city": "Los Angeles",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "Make a payment of $96 to Amelia from your debit card and then privately request $215 from Mahmoud, followed by a public payment of $42 to Victoria from your app balance.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "96",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Amelia"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "215",
                        "private_visibility": "True",
                        "receiver": "Mahmoud"
                    }
                },
                {
                    "makepayment": {
                        "amount": "42",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Victoria"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='96', #payment_method='debit card', #private_visibility='False', #receiver='Amelia')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "96",
                "payment_method": "debit card",
                "private_visibility": "False",
                "receiver": "Amelia"
            }
        }
    },
    {
        "input": "Find a moderately priced Seafood restaurant in Walnut Creek for a reservation for 2 people on March 3rd at 19:15, with vegetarian options, and consider Greek food as an alternative option.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Seafood",
                        "location": "Walnut Creek",
                        "price_range": "moderate"
                    }
                },
                {
                    "findrestaurants": {
                        "category": "Greek",
                        "has_vegetarian_options": "True",
                        "location": "Walnut Creek",
                        "price_range": "moderate"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-03",
                        "location": "Walnut Creek",
                        "number_of_seats": "2",
                        "restaurant_name": "Opa Authentic Greek Cuisine Walnut Creek",
                        "time": "19:15"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Seafood', #location='Walnut Creek', #price_range='moderate')",
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category=category, #has_vegetarian_options=has_vegetarian_options, #location=location, #price_range=price_range)",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-03', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='19:15')"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Seafood",
                "location": "Walnut Creek",
                "price_range": "moderate",
                "date": "2019-03-03",
                "number_of_seats": "2",
                "time": "19:15"
            }
        }
    },
    {
        "input": "Search for a bus departing on March 13th from Los Angeles to San Diego with 3 people, including extra luggage, on the 6:50 am bus from North Hollywood station.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-13",
                        "from_city": "Los Angeles",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-13",
                        "departure_time": "06:50",
                        "from_city": "Los Angeles",
                        "num_passengers": "3",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-13', #from_city='Los Angeles', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-13",
                "from_city": "Los Angeles",
                "to_city": "San Diego",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "Book a house in Sydney, Australia for 3 adults with laundry service from March 5th to March 12th, and confirm the reservation details including the check-in date, check-out date, and location.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "has_laundry_service": "True",
                        "number_of_adults": "3",
                        "where_to": "Sydney"
                    }
                },
                {
                    "bookhouse": {
                        "check_in_date": "2019-03-05",
                        "check_out_date": "2019-03-12",
                        "number_of_adults": "3",
                        "where_to": "Sydney"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "check_in_date",
                    "check_out_date",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#has_laundry_service='True', #number_of_adults='3', #where_to='Sydney')",
                "where_to, number_of_adults, check_in_date, check_out_date, rating, address, phone_number, total_price, has_laundry_service = bookhouse(#check_in_date='2019-03-05', #check_out_date='2019-03-12', #number_of_adults=number_of_adults, #where_to=where_to)"
            ],
            "middle_arguments": [
                "check_in_date",
                "total_price",
                "check_out_date",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "has_laundry_service": "True",
                "number_of_adults": "3",
                "where_to": "Sydney",
                "check_in_date": "2019-03-05",
                "check_out_date": "2019-03-12"
            }
        }
    },
    {
        "input": "I want to book 2 bus tickets for a trip from San Francisco to Los Angeles on March 6th for 2 passengers, departing at 7:30 am, without any additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-06",
                        "from_city": "San Francisco",
                        "num_passengers": "2",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-06",
                        "departure_time": "07:30",
                        "from_city": "San Francisco",
                        "num_passengers": "2",
                        "to_city": "Los Angeles"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-06', #from_city='San Francisco', #num_passengers='2', #to_city='Los Angeles')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-06",
                "from_city": "San Francisco",
                "num_passengers": "2",
                "to_city": "Los Angeles",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I would like to purchase a conditionally refundable, economy premium train ticket with travel insurance for one adult traveling from Vancouver to Portland on March 4th.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-04",
                        "from": "Vancouver",
                        "number_of_adults": "1",
                        "to": "Portland"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-04",
                        "from": "Vancouver",
                        "journey_start_time": "06:50",
                        "number_of_adults": "1",
                        "to": "Portland",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-04', #from='Vancouver', #number_of_adults='1', #to='Portland')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-04",
                "from": "Vancouver",
                "number_of_adults": "1",
                "to": "Portland"
            }
        }
    },
    {
        "input": "I would like to search for a bus from Anaheim to Las Vegas on March 12th, with an additional luggage requirement, and book a ticket for 1 person on a direct bus departing at 8:10 am.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-12",
                        "from_city": "Anaheim",
                        "to_city": "Las Vegas"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-12",
                        "departure_time": "08:10",
                        "from_city": "Anaheim",
                        "num_passengers": "1",
                        "to_city": "Las Vegas"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-12', #from_city='Anaheim', #to_city='Las Vegas')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-12",
                "from_city": "Anaheim",
                "to_city": "Las Vegas",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "Find me a one-stop bus leaving tomorrow from San Diego to Sacramento with 3 tickets and additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-02",
                        "from_city": "San Diego",
                        "to_city": "Sacramento"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-02",
                        "departure_time": "06:50",
                        "from_city": "San Diego",
                        "num_passengers": "3",
                        "to_city": "Sacramento"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='one-stop', #departure_date='2019-03-02', #from_city='San Diego', #to_city='Sacramento')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "one-stop",
                "departure_date": "2019-03-02",
                "from_city": "San Diego",
                "to_city": "Sacramento",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "I need to book a train ticket for 1 seat from San Francisco to Sacramento on March 1st, with a departure time of 6:20 am, and it should be conditionally refundable.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-01",
                        "from": "San Francisco",
                        "to": "Sacramento"
                    }
                },
                {
                    "findtrains": {
                        "class": "Value",
                        "date_of_journey": "2019-03-01",
                        "from": "San Francisco",
                        "number_of_adults": "1",
                        "to": "Sacramento"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-01', #from='San Francisco', #to='Sacramento')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class=class, #date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-01",
                "from": "San Francisco",
                "to": "Sacramento"
            }
        }
    },
    {
        "input": "I would like to rent an SUV car in Warsaw from March 7th at 4:30 pm until March 12th without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "SUV",
                        "city": "Warsaw",
                        "end_date": "2019-03-12",
                        "pickup_time": "16:30",
                        "start_date": "2019-03-07"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "SUV",
                        "end_date": "2019-03-12",
                        "pickup_location": "Warsaw Chopin Airport",
                        "pickup_time": "16:30",
                        "start_date": "2019-03-07"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='SUV', #city='Warsaw', #end_date='2019-03-12', #pickup_time='16:30', #start_date='2019-03-07')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "SUV",
                "city": "Warsaw",
                "end_date": "2019-03-12",
                "pickup_time": "16:30",
                "start_date": "2019-03-07",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "I need to find a hatchback rental car in Philadelphia from today until March 4th, with pickup at 18:00, and I want to add insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Hatchback",
                        "city": "Philadelphia",
                        "end_date": "2019-03-04",
                        "pickup_time": "18:00",
                        "start_date": "2019-03-01"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-04",
                        "pickup_location": "PHL International Airport",
                        "pickup_time": "18:00",
                        "start_date": "2019-03-01"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Hatchback', #city='Philadelphia', #end_date='2019-03-04', #pickup_time='18:00', #start_date='2019-03-01')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Hatchback",
                "city": "Philadelphia",
                "end_date": "2019-03-04",
                "pickup_time": "18:00",
                "start_date": "2019-03-01",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Please book a Sedan car with insurance included for pickup from PHL International Airport in Philadelphia on March 10th at 3:30 pm and return on March 11th.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Philadelphia",
                        "end_date": "2019-03-11",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-10"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Sedan",
                        "end_date": "2019-03-11",
                        "pickup_location": "PHL International Airport",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-10"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Philadelphia', #end_date='2019-03-11', #pickup_time='15:30', #start_date='2019-03-10')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Philadelphia",
                "end_date": "2019-03-11",
                "pickup_time": "15:30",
                "start_date": "2019-03-10",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Please find me a drama movie at Century 25 Union Landing and XD in Union City, and book 1 ticket for the movie \"Hustlers\" on March 8th at 10:45 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "genre": "Drama",
                        "location": "Union City",
                        "theater_name": "Century 25 Union Landing and XD"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Union City",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-08",
                        "show_time": "22:45",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#genre='Drama', #location='Union City', #theater_name='Century 25 Union Landing and XD')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='1', #show_date='2019-03-08', #show_time='22:45', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "genre": "Drama",
                "location": "Union City",
                "theater_name": "Century 25 Union Landing and XD",
                "number_of_tickets": "1",
                "show_date": "2019-03-08",
                "show_time": "22:45"
            }
        }
    },
    {
        "input": "I would like to purchase 3 tickets for the Broadway show \"Adieu Monsieur Haffmann\" on March 7th in Los Angeles at the Theatre Raymond Kabbaz, located at 10361 West Pico Boulevard, with ticket prices at $55 each.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-07",
                        "event_type": "Theater"
                    }
                },
                {
                    "buyeventtickets": {
                        "city": "Los Angeles",
                        "date": "2019-03-07",
                        "event_name": "Adieu Monsieur Haffmann",
                        "number_of_tickets": "3"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_name",
                    "date",
                    "time",
                    "number_of_tickets",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Los Angeles', #date='2019-03-07', #event_type='Theater')",
                "event_name, date, time, number_of_tickets, price_per_ticket, city, venue, venue_address = buyeventtickets(#city=city, #date=date, #event_name=event_name, #number_of_tickets='3')"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Los Angeles",
                "date": "2019-03-07",
                "event_type": "Theater",
                "number_of_tickets": "3"
            }
        }
    },
    {
        "input": "Find me a train ticket for 1 passenger on March 7th from San Diego to Los Angeles departing at 6:40 am.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-07",
                        "from": "San Diego",
                        "to": "Los Angeles"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-07",
                        "from": "San Diego",
                        "journey_start_time": "06:40",
                        "number_of_adults": "1",
                        "to": "Los Angeles",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-07', #from='San Diego', #to='Los Angeles')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-07",
                "from": "San Diego",
                "to": "Los Angeles"
            }
        }
    },
    {
        "input": "Play the song \"Good Together\" by Shy Martin from the album \"Overthinking\" released in 2017 on the Living room device, and confirm that it is a Pop song before starting the playback.",
        "output": {
            "used_app": [
                "Music",
                "Music"
            ],
            "used_api": [
                {
                    "lookupmusic": {
                        "album": "Overthinking",
                        "artist": "Shy Martin",
                        "year": "2017"
                    }
                },
                {
                    "playmedia": {
                        "album": "Overthinking",
                        "artist": "Shy Martin",
                        "device": "Living room",
                        "track": "Good Together"
                    }
                }
            ],
            "result_arguments": [
                [
                    "track",
                    "artist",
                    "album",
                    "genre",
                    "year"
                ],
                [
                    "track",
                    "artist",
                    "album",
                    "genre",
                    "year",
                    "device"
                ]
            ],
            "api_results": [
                "track, artist, album, genre, year = lookupmusic(#album='Overthinking', #artist='Shy Martin', #year='2017')",
                "track, artist, album, genre, year, device = playmedia(#album=album, #artist=artist, #device='Living room', #track=track)"
            ],
            "middle_arguments": [
                "artist",
                "device",
                "album",
                "track",
                "genre",
                "year"
            ],
            "user_aware_arguments": {
                "album": "Overthinking",
                "artist": "Shy Martin",
                "year": "2017",
                "device": "Living room"
            }
        }
    },
    {
        "input": "I would like to purchase 3 regular drama movie tickets for the show \"Hustlers\" at Regal Crow Canyon in San Ramon on March 3rd at 7:15 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "genre": "Drama",
                        "location": "San Ramon",
                        "show_type": "regular",
                        "theater_name": "Regal Crow Canyon"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "San Ramon",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "3",
                        "show_date": "2019-03-03",
                        "show_time": "19:15",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#genre='Drama', #location='San Ramon', #show_type='regular', #theater_name='Regal Crow Canyon')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='3', #show_date='2019-03-03', #show_time='19:15', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "genre": "Drama",
                "location": "San Ramon",
                "show_type": "regular",
                "theater_name": "Regal Crow Canyon",
                "number_of_tickets": "3",
                "show_date": "2019-03-03",
                "show_time": "19:15"
            }
        }
    },
    {
        "input": "Book a SUV, specifically an Alfa Romeo Stelvio, for rental in Long Beach starting on March 8th at 12:30 pm and returning on March 12th, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Long Beach",
                        "end_date": "2019-03-12",
                        "pickup_time": "12:30",
                        "start_date": "2019-03-08"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "SUV",
                        "end_date": "2019-03-12",
                        "pickup_location": "Downtown Station",
                        "pickup_time": "12:30",
                        "start_date": "2019-03-08"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Long Beach', #end_date='2019-03-12', #pickup_time='12:30', #start_date='2019-03-08')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Long Beach",
                "end_date": "2019-03-12",
                "pickup_time": "12:30",
                "start_date": "2019-03-08",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "I would like to search for a direct bus from Fresno to San Francisco on March 5th for 3 passengers without additional luggage, and then proceed with purchasing the tickets for the bus departing at 10:50 am.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-05",
                        "from_city": "Fresno",
                        "num_passengers": "3",
                        "to_city": "San Francisco"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-05",
                        "departure_time": "10:50",
                        "from_city": "Fresno",
                        "num_passengers": "3",
                        "to_city": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-05', #from_city='Fresno', #num_passengers='3', #to_city='San Francisco')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-05",
                "from_city": "Fresno",
                "num_passengers": "3",
                "to_city": "San Francisco",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Book a luxurious business class train ticket for 1 person from Washington to Chicago on March 12th departing at 9:40 am, and include travel insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "class": "Business",
                        "date_of_journey": "2019-03-12",
                        "from": "Washington",
                        "to": "Chicago"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Business",
                        "date_of_journey": "2019-03-12",
                        "from": "Washington",
                        "journey_start_time": "09:40",
                        "number_of_adults": "1",
                        "to": "Chicago",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class='Business', #date_of_journey='2019-03-12', #from='Washington', #to='Chicago')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "class": "Business",
                "date_of_journey": "2019-03-12",
                "from": "Washington",
                "to": "Chicago"
            }
        }
    },
    {
        "input": "Find me a Thai restaurant in Fairfax that serves vegetarian options for a reservation for 2 people on March 1st at 7:30 pm.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Thai",
                        "has_vegetarian_options": "True",
                        "location": "Fairfax"
                    }
                },
                {
                    "findrestaurants": {
                        "category": "American",
                        "has_vegetarian_options": "True",
                        "location": "San Francisco"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Francisco",
                        "number_of_seats": "2",
                        "restaurant_name": "25 Lusk",
                        "time": "19:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Thai', #has_vegetarian_options='True', #location='Fairfax')",
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category=category, #has_vegetarian_options=has_vegetarian_options, #location=location)",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='19:30')"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Thai",
                "has_vegetarian_options": "True",
                "location": "Fairfax",
                "date": "2019-03-01",
                "number_of_seats": "2",
                "time": "19:30"
            }
        }
    },
    {
        "input": "Book a house in Anaheim with a rating of 4.0 or higher for two adults from March 4th to March 11th, confirm the availability of laundry service and provide the contact number for the property located at 1050 West Ball Road, then proceed with making a reservation for the specified dates.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "number_of_adults": "2",
                        "rating": "4.00",
                        "where_to": "Anaheim"
                    }
                },
                {
                    "bookhouse": {
                        "check_in_date": "2019-03-04",
                        "check_out_date": "2019-03-11",
                        "number_of_adults": "2",
                        "where_to": "Anaheim"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "check_in_date",
                    "check_out_date",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#number_of_adults='2', #rating='4.00', #where_to='Anaheim')",
                "where_to, number_of_adults, check_in_date, check_out_date, rating, address, phone_number, total_price, has_laundry_service = bookhouse(#check_in_date='2019-03-04', #check_out_date='2019-03-11', #number_of_adults=number_of_adults, #where_to=where_to)"
            ],
            "middle_arguments": [
                "check_in_date",
                "total_price",
                "check_out_date",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "number_of_adults": "2",
                "rating": "4.00",
                "where_to": "Anaheim",
                "check_in_date": "2019-03-04",
                "check_out_date": "2019-03-11"
            }
        }
    },
    {
        "input": "I want to rent a car in Toronto, Canada, starting from today at 20:00 and returning it on March 4th, with insurance included, and I'm open to any type of car available.",
        "output": {
            "used_app": [
                "Rents",
                "Rents",
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Toronto",
                        "end_date": "2019-03-04",
                        "pickup_time": "20:00",
                        "start_date": "2019-03-02"
                    }
                },
                {
                    "getcarsavailable": {
                        "city": "San Diego",
                        "end_date": "2019-03-04",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-02"
                    }
                },
                {
                    "getcarsavailable": {
                        "city": "San Diego",
                        "end_date": "2019-03-02",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-01"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Sedan",
                        "end_date": "2019-03-02",
                        "pickup_location": "SAN International Airport",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-01"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Toronto', #end_date='2019-03-04', #pickup_time='20:00', #start_date='2019-03-02')",
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city=city, #end_date=end_date, #pickup_time=pickup_time, #start_date=start_date)",
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city=city, #end_date=end_date, #pickup_time=pickup_time, #start_date=start_date)",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Toronto",
                "end_date": "2019-03-04",
                "pickup_time": "20:00",
                "start_date": "2019-03-02",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Please request a payment of $115 from Amelia, ensuring the transaction is kept private and using a debit card as the payment method.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "115",
                        "private_visibility": "True",
                        "receiver": "Amelia"
                    }
                },
                {
                    "makepayment": {
                        "amount": "82",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Jerry"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='115', #private_visibility='True', #receiver='Amelia')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='debit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "115",
                "private_visibility": "True",
                "receiver": "Amelia",
                "payment_method": "debit card"
            }
        }
    },
    {
        "input": "Please try to book a table at P.f. Chang's in Corte Madera at 12 pm for 2 on March 8th, and if unsuccessful, try booking a table at Benissimo Restaurant & Bar instead.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "reserverestaurant": {
                        "date": "2019-03-08",
                        "location": "Corte Madera",
                        "number_of_seats": "2",
                        "restaurant_name": "P.f. Chang's",
                        "time": "12:00"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-08",
                        "location": "Corte Madera",
                        "number_of_seats": "2",
                        "restaurant_name": "Benissimo Restaurant & Bar",
                        "time": "12:00"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-08', #location='Corte Madera', #number_of_seats='2', #restaurant_name='P.f. Chang's', #time='12:00')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "rating",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "date"
            ],
            "user_aware_arguments": {
                "date": "2019-03-08",
                "location": "Corte Madera",
                "number_of_seats": "2",
                "restaurant_name": "P.f. Chang's",
                "time": "12:00"
            }
        }
    },
    {
        "input": "Please help me find a rental car, specifically a Sedan, to pick up at 6:00 PM in Phoenix on March 4th and return on March 6th, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Sedan",
                        "city": "Phoenix",
                        "end_date": "2019-03-06",
                        "pickup_time": "18:00",
                        "start_date": "2019-03-04"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-06",
                        "pickup_location": "Phoenix Union Station",
                        "pickup_time": "18:00",
                        "start_date": "2019-03-04"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Sedan', #city='Phoenix', #end_date='2019-03-06', #pickup_time='18:00', #start_date='2019-03-04')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Sedan",
                "city": "Phoenix",
                "end_date": "2019-03-06",
                "pickup_time": "18:00",
                "start_date": "2019-03-04",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Please reserve an Alfa Romeo Stelvio SUV for me from Washington starting on March 2nd until March 6th with a pickup time of 4:30 pm, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Washington",
                        "end_date": "2019-03-06",
                        "pickup_time": "16:30",
                        "start_date": "2019-03-02"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "SUV",
                        "end_date": "2019-03-06",
                        "pickup_location": "Dulles International Airport",
                        "pickup_time": "16:30",
                        "start_date": "2019-03-02"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Washington', #end_date='2019-03-06', #pickup_time='16:30', #start_date='2019-03-02')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Washington",
                "end_date": "2019-03-06",
                "pickup_time": "16:30",
                "start_date": "2019-03-02",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "I want to book a direct bus ticket for 3 people from Sacramento to Los Angeles on March 11th with extra luggage included.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-11",
                        "from_city": "Sacramento",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-11",
                        "departure_time": "07:40",
                        "from_city": "Sacramento",
                        "num_passengers": "3",
                        "to_city": "Los Angeles"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-11', #from_city='Sacramento', #to_city='Los Angeles')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-11",
                "from_city": "Sacramento",
                "to_city": "Los Angeles",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "Please help me find a train ticket for a journey from Sacramento to Los Angeles on March 6th, departing at 6:30 am, with one ticket in economy class, including trip insurance, and a ticket cost of $83.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-06",
                        "from": "Sacramento",
                        "to": "Los Angeles"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-06",
                        "from": "Sacramento",
                        "journey_start_time": "06:30",
                        "number_of_adults": "1",
                        "to": "Los Angeles",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-06', #from='Sacramento', #to='Los Angeles')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-06",
                "from": "Sacramento",
                "to": "Los Angeles"
            }
        }
    },
    {
        "input": "I would like to book 3 regular tickets for Toy Story 4 at 3rd Street Cinema in Santa Rosa for the show on March 7th at 4:45 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "location": "Santa Rosa",
                        "show_type": "regular",
                        "theater_name": "3rd Street Cinema"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Santa Rosa",
                        "movie_name": "Toy Story 4",
                        "number_of_tickets": "3",
                        "show_date": "2019-03-07",
                        "show_time": "16:45",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#location='Santa Rosa', #show_type='regular', #theater_name='3rd Street Cinema')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='3', #show_date='2019-03-07', #show_time='16:45', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Santa Rosa",
                "show_type": "regular",
                "theater_name": "3rd Street Cinema",
                "number_of_tickets": "3",
                "show_date": "2019-03-07",
                "show_time": "16:45"
            }
        }
    },
    {
        "input": "Instruct the system to provide information about a bus leaving Las Vegas for Anaheim on March 5th at 6:40 am, and purchase 2 tickets for this journey.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-05",
                        "from_city": "Las Vegas",
                        "to_city": "Anaheim"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-05",
                        "departure_time": "06:40",
                        "from_city": "Las Vegas",
                        "num_passengers": "2",
                        "to_city": "Anaheim"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-05', #from_city='Las Vegas', #to_city='Anaheim')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-05",
                "from_city": "Las Vegas",
                "to_city": "Anaheim",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "USER: I need to collect $112 from Amelia and make a $27 payment to Svetlana, processing the transactions with a credit card and UnionPay respectively.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "112",
                        "private_visibility": "False",
                        "receiver": "Amelia"
                    }
                },
                {
                    "makepayment": {
                        "amount": "27",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Svetlana"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='112', #private_visibility='False', #receiver='Amelia')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='credit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "112",
                "private_visibility": "False",
                "receiver": "Amelia",
                "payment_method": "credit card"
            }
        }
    },
    {
        "input": "Book a Value train ticket for 1 person departing from Sacramento to Los Angeles on March 8th at 6:30 am, without travel insurance, arriving at Union Station in LA.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-08",
                        "from": "Sacramento",
                        "to": "Los Angeles"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-08",
                        "from": "Sacramento",
                        "journey_start_time": "06:30",
                        "number_of_adults": "1",
                        "to": "Los Angeles",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-08', #from='Sacramento', #to='Los Angeles')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-08",
                "from": "Sacramento",
                "to": "Los Angeles"
            }
        }
    },
    {
        "input": "Make a payment of $162 to Rachel using a credit card, ensuring the transaction is not visible to the public.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "162",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Rachel"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "134",
                        "private_visibility": "False",
                        "receiver": "Bob"
                    }
                },
                {
                    "makepayment": {
                        "amount": "53",
                        "payment_method": "app balance",
                        "private_visibility": "True",
                        "receiver": "Mary"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='162', #payment_method='credit card', #private_visibility='False', #receiver='Rachel')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "162",
                "payment_method": "credit card",
                "private_visibility": "False",
                "receiver": "Rachel"
            }
        }
    },
    {
        "input": "Find and book 1 bus ticket from New York to Washington departing on March 7th at 6 am for $35 with no additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-07",
                        "from_city": "New York",
                        "to_city": "Washington"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-07",
                        "departure_time": "06:00",
                        "from_city": "New York",
                        "num_passengers": "1",
                        "to_city": "Washington"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-07', #from_city='New York', #to_city='Washington')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-07",
                "from_city": "New York",
                "to_city": "Washington",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Find me a direct bus leaving from San Francisco to Los Angeles on March 12th, departing at 7:50 am from the Transbay Terminal, arriving at North Hollywood station, and book 3 tickets with no additional luggage for $51 each.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-12",
                        "from_city": "San Francisco",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-12",
                        "departure_time": "07:50",
                        "from_city": "San Francisco",
                        "num_passengers": "3",
                        "to_city": "Los Angeles"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-12', #from_city='San Francisco', #to_city='Los Angeles')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-12",
                "from_city": "San Francisco",
                "to_city": "Los Angeles",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Book a flexible economy premium train ticket for 1 person from New York to Washington departing on March 1st at 8:20 am with trip insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "class": "Business",
                        "date_of_journey": "2019-03-01",
                        "from": "New York",
                        "to": "Washington"
                    }
                },
                {
                    "findtrains": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-01",
                        "from": "New York",
                        "to": "Washington"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-01",
                        "from": "New York",
                        "journey_start_time": "08:20",
                        "number_of_adults": "1",
                        "to": "Washington",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class='Business', #date_of_journey='2019-03-01', #from='New York', #to='Washington')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class=class, #date_of_journey=date_of_journey, #from=from, #to=to)",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "class": "Business",
                "date_of_journey": "2019-03-01",
                "from": "New York",
                "to": "Washington"
            }
        }
    },
    {
        "input": "Find a round trip economy flight departing from Chicago on March 2nd to Delhi and returning on March 6th, with seating class as Economy.",
        "output": {
            "used_app": [
                "Flights",
                "Flights"
            ],
            "used_api": [
                {
                    "searchroundtripflights": {
                        "departure_date": "2019-03-02",
                        "destination_airport": "Delhi",
                        "origin_airport": "Chicago",
                        "return_date": "2019-03-06",
                        "seating_class": "Economy"
                    }
                },
                {
                    "searchroundtripflights": {
                        "departure_date": "2019-03-02",
                        "destination_airport": "New York",
                        "origin_airport": "Chicago",
                        "return_date": "2019-03-06",
                        "seating_class": "Economy"
                    }
                }
            ],
            "result_arguments": [
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "return_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "inbound_arrival_time",
                    "inbound_departure_time",
                    "price",
                    "airlines"
                ],
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "return_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "inbound_arrival_time",
                    "inbound_departure_time",
                    "price",
                    "airlines"
                ]
            ],
            "api_results": [
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, return_date, is_nonstop, outbound_departure_time, outbound_arrival_time, inbound_arrival_time, inbound_departure_time, price, airlines = searchroundtripflights(#departure_date='2019-03-02', #destination_airport='Delhi', #origin_airport='Chicago', #return_date='2019-03-06', #seating_class='Economy')",
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, return_date, is_nonstop, outbound_departure_time, outbound_arrival_time, inbound_arrival_time, inbound_departure_time, price, airlines = searchroundtripflights(#departure_date=departure_date, #destination_airport=destination_airport, #origin_airport=origin_airport, #return_date=return_date, #seating_class=seating_class)"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "price",
                "outbound_arrival_time",
                "outbound_departure_time",
                "departure_date",
                "seating_class",
                "inbound_departure_time",
                "inbound_arrival_time",
                "is_nonstop",
                "return_date",
                "airlines",
                "destination_airport",
                "origin_airport"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-02",
                "destination_airport": "Delhi",
                "origin_airport": "Chicago",
                "return_date": "2019-03-06",
                "seating_class": "Economy"
            }
        }
    },
    {
        "input": "I need a one-stop bus leaving from Sacramento on Saturday, March 2nd, going to Las Vegas, and I want to purchase 3 tickets for the 7:40 am bus with a ticket price of $65 each.",
        "output": {
            "used_app": [
                "Buses",
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-02",
                        "from_city": "Sacramento",
                        "to_city": "Las Vegas"
                    }
                },
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-02",
                        "from_city": "Sacramento",
                        "num_passengers": "3",
                        "to_city": "Las Vegas"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-02",
                        "departure_time": "07:40",
                        "from_city": "Sacramento",
                        "num_passengers": "3",
                        "to_city": "Las Vegas"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='one-stop', #departure_date='2019-03-02', #from_city='Sacramento', #to_city='Las Vegas')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "one-stop",
                "departure_date": "2019-03-02",
                "from_city": "Sacramento",
                "to_city": "Las Vegas",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Please book 2 fully refundable tickets for the train departing from Vancouver to Seattle on March 7th at 6:40 am.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-07",
                        "from": "Vancouver",
                        "number_of_adults": "2",
                        "to": "Seattle"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-07",
                        "from": "Vancouver",
                        "journey_start_time": "06:40",
                        "number_of_adults": "2",
                        "to": "Seattle",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-07', #from='Vancouver', #number_of_adults='2', #to='Seattle')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-07",
                "from": "Vancouver",
                "number_of_adults": "2",
                "to": "Seattle"
            }
        }
    },
    {
        "input": "Please search for a table reservation for 2 people at Chianti Cucina in Novato for 4:45 pm on March 1st, and if unavailable, suggest a reservation for 2 people at 5 pm on the same date.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "Novato",
                        "number_of_seats": "2",
                        "restaurant_name": "Chianti Cucina",
                        "time": "16:45"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "Novato",
                        "number_of_seats": "2",
                        "restaurant_name": "Chianti Cucina",
                        "time": "17:00"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location='Novato', #number_of_seats='2', #restaurant_name='Chianti Cucina', #time='16:45')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "rating",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "date"
            ],
            "user_aware_arguments": {
                "date": "2019-03-01",
                "location": "Novato",
                "number_of_seats": "2",
                "restaurant_name": "Chianti Cucina",
                "time": "16:45"
            }
        }
    },
    {
        "input": "Find and book 4 tickets for the Musical show \"Funtcase\" on March 4th at 6:30 pm at the NEST in Toronto.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Toronto",
                        "date": "2019-03-04",
                        "event_type": "Music"
                    }
                },
                {
                    "buyeventtickets": {
                        "city": "Toronto",
                        "date": "2019-03-04",
                        "event_name": "Funtcase",
                        "number_of_tickets": "4"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_name",
                    "date",
                    "time",
                    "number_of_tickets",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Toronto', #date='2019-03-04', #event_type='Music')",
                "event_name, date, time, number_of_tickets, price_per_ticket, city, venue, venue_address = buyeventtickets(#city=city, #date=date, #event_name=event_name, #number_of_tickets='4')"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Toronto",
                "date": "2019-03-04",
                "event_type": "Music",
                "number_of_tickets": "4"
            }
        }
    },
    {
        "input": "I'd like to reserve a Hatchback car from Fresno Station starting on March 2nd at 3:30 pm until March 6th without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Hatchback",
                        "city": "Fresno",
                        "end_date": "2019-03-06",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-02"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-06",
                        "pickup_location": "Fresno Station",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-02"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Hatchback', #city='Fresno', #end_date='2019-03-06', #pickup_time='15:30', #start_date='2019-03-02')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Hatchback",
                "city": "Fresno",
                "end_date": "2019-03-06",
                "pickup_time": "15:30",
                "start_date": "2019-03-02",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "I want to make a private payment transfer of $83 to Margaret from my credit card.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "83",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Margaret"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "35",
                        "private_visibility": "False",
                        "receiver": "Yumi"
                    }
                },
                {
                    "makepayment": {
                        "amount": "16",
                        "payment_method": "debit card",
                        "private_visibility": "True",
                        "receiver": "Mary"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='83', #payment_method='credit card', #private_visibility='False', #receiver='Margaret')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "83",
                "payment_method": "credit card",
                "private_visibility": "False",
                "receiver": "Margaret"
            }
        }
    },
    {
        "input": "USER: Please find me a bus ticket for a trip from Las Vegas to Anaheim on March 10th at 6:40 am, with 1 ticket needed and no additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-10",
                        "from_city": "Las Vegas",
                        "to_city": "Anaheim"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-10",
                        "departure_time": "06:40",
                        "from_city": "Las Vegas",
                        "num_passengers": "1",
                        "to_city": "Anaheim"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-10', #from_city='Las Vegas', #to_city='Anaheim')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-10",
                "from_city": "Las Vegas",
                "to_city": "Anaheim",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Make a public payment of $21 to Emma from your app balance, then request a public payment of $61 from Mahmoud, and finally make a public payment of $29 to Margaret from your UnionPay credit card.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "21",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Emma"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "61",
                        "private_visibility": "False",
                        "receiver": "Mahmoud"
                    }
                },
                {
                    "makepayment": {
                        "amount": "29",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Margaret"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='21', #payment_method='app balance', #private_visibility='False', #receiver='Emma')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "21",
                "payment_method": "app balance",
                "private_visibility": "False",
                "receiver": "Emma"
            }
        }
    },
    {
        "input": "Find me a theater event in Los Angeles on March 14th, similar to Music event on the 13th.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-14",
                        "event_type": "Theater"
                    }
                },
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-13",
                        "event_type": "Music"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Los Angeles', #date='2019-03-14', #event_type='Theater')",
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city=city, #date=date, #event_type=event_type)"
            ],
            "middle_arguments": [
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Los Angeles",
                "date": "2019-03-14",
                "event_type": "Theater"
            }
        }
    },
    {
        "input": "USER: I demand a payment of $83 from Mahmoud, ensure it is not private, then transfer $46 to Bob from my debit card.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "83",
                        "private_visibility": "False",
                        "receiver": "Mahmoud"
                    }
                },
                {
                    "makepayment": {
                        "amount": "46",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Bob"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='83', #private_visibility='False', #receiver='Mahmoud')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='debit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "83",
                "private_visibility": "False",
                "receiver": "Mahmoud",
                "payment_method": "debit card"
            }
        }
    },
    {
        "input": "I want to book 3 bus tickets from Fresno to San Diego on March 6th at 8:20 am without any additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-06",
                        "from_city": "Fresno",
                        "to_city": "San Diego"
                    }
                },
                {
                    "findbus": {
                        "departure_date": "2019-03-06",
                        "from_city": "Fresno",
                        "num_passengers": "3",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-06",
                        "departure_time": "08:20",
                        "from_city": "Fresno",
                        "num_passengers": "3",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-06', #from_city='Fresno', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-06",
                "from_city": "Fresno",
                "to_city": "San Diego",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I would like to purchase one regular ticket for the movie \"Hustlers\" on March 4th at 10:30 pm in Santa Clara.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "buymovietickets": {
                        "location": "Brentwood",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-03",
                        "show_time": "19:30",
                        "show_type": "regular"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Santa Clara",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-04",
                        "show_time": "22:30",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location='Brentwood', #movie_name='Hustlers', #number_of_tickets='1', #show_date='2019-03-03', #show_time='19:30', #show_type='regular')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets=number_of_tickets, #show_date=show_date, #show_time=show_time, #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "show_time",
                "street_address",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Brentwood",
                "movie_name": "Hustlers",
                "number_of_tickets": "1",
                "show_date": "2019-03-03",
                "show_time": "19:30",
                "show_type": "regular"
            }
        }
    },
    {
        "input": "I would like to rent a Sedan with insurance from Cape Town International Airport on March 5th at 5 pm, returning it on March 11th.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Sedan",
                        "city": "Cape Town",
                        "end_date": "2019-03-11",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-05"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Sedan",
                        "end_date": "2019-03-11",
                        "pickup_location": "Cape Town International Airport",
                        "pickup_time": "17:00",
                        "start_date": "2019-03-05"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Sedan', #city='Cape Town', #end_date='2019-03-11', #pickup_time='17:00', #start_date='2019-03-05')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Sedan",
                "city": "Cape Town",
                "end_date": "2019-03-11",
                "pickup_time": "17:00",
                "start_date": "2019-03-05",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Please find me a bus ticket for 1 person departing from San Francisco to Las Vegas on March 3rd at 7:50 am from Transbay Terminal, without any additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-03",
                        "from_city": "San Francisco",
                        "to_city": "Las Vegas"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-03",
                        "departure_time": "07:50",
                        "from_city": "San Francisco",
                        "num_passengers": "1",
                        "to_city": "Las Vegas"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-03', #from_city='San Francisco', #to_city='Las Vegas')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-03",
                "from_city": "San Francisco",
                "to_city": "Las Vegas",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I want to book a one-way flight for 4 people from New York to Los Angeles on the day after tomorrow, with Delta Airlines departing at 7:50 am for $178.",
        "output": {
            "used_app": [
                "Flights",
                "Flights"
            ],
            "used_api": [
                {
                    "searchonewayflight": {
                        "departure_date": "2019-03-13",
                        "destination_airport": "Los Angeles",
                        "number_of_tickets": "2",
                        "origin_airport": "New York"
                    }
                },
                {
                    "searchonewayflight": {
                        "departure_date": "2019-03-03",
                        "destination_airport": "Los Angeles",
                        "number_of_tickets": "4",
                        "origin_airport": "New York"
                    }
                }
            ],
            "result_arguments": [
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "price",
                    "airlines"
                ],
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "price",
                    "airlines"
                ]
            ],
            "api_results": [
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, is_nonstop, outbound_departure_time, outbound_arrival_time, price, airlines = searchonewayflight(#departure_date='2019-03-13', #destination_airport='Los Angeles', #number_of_tickets='2', #origin_airport='New York')",
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, is_nonstop, outbound_departure_time, outbound_arrival_time, price, airlines = searchonewayflight(#departure_date=departure_date, #destination_airport=destination_airport, #number_of_tickets=number_of_tickets, #origin_airport=origin_airport)"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "price",
                "outbound_arrival_time",
                "outbound_departure_time",
                "departure_date",
                "seating_class",
                "is_nonstop",
                "airlines",
                "destination_airport",
                "origin_airport"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-13",
                "destination_airport": "Los Angeles",
                "number_of_tickets": "2",
                "origin_airport": "New York"
            }
        }
    },
    {
        "input": "Please book a house in New York with a rating of 4.6 or higher for 1 person, checking in on March 3rd and checking out on March 5th, ensuring there is a laundry service available and providing the total price before booking.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "number_of_adults": "1",
                        "rating": "4.60",
                        "where_to": "New York"
                    }
                },
                {
                    "bookhouse": {
                        "check_in_date": "2019-03-03",
                        "check_out_date": "2019-03-05",
                        "number_of_adults": "1",
                        "where_to": "New York"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "check_in_date",
                    "check_out_date",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#number_of_adults='1', #rating='4.60', #where_to='New York')",
                "where_to, number_of_adults, check_in_date, check_out_date, rating, address, phone_number, total_price, has_laundry_service = bookhouse(#check_in_date='2019-03-03', #check_out_date='2019-03-05', #number_of_adults=number_of_adults, #where_to=where_to)"
            ],
            "middle_arguments": [
                "check_in_date",
                "total_price",
                "check_out_date",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "number_of_adults": "1",
                "rating": "4.60",
                "where_to": "New York",
                "check_in_date": "2019-03-03",
                "check_out_date": "2019-03-05"
            }
        }
    },
    {
        "input": "Arrange a visible public transaction for a payment of $141 to Bob from the saving account, ensuring it is deducted from the debit card balance, with no private visibility, and confirm the successful processing of the transaction.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "34",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Rachel"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "58",
                        "private_visibility": "False",
                        "receiver": "Tom"
                    }
                },
                {
                    "makepayment": {
                        "amount": "141",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Bob"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='34', #payment_method='app balance', #private_visibility='False', #receiver='Rachel')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "34",
                "payment_method": "app balance",
                "private_visibility": "False",
                "receiver": "Rachel"
            }
        }
    },
    {
        "input": "Book a house in London, UK with a rating of 3.6 or higher for 3 adults from March 3rd to March 10th, confirm the location, number of guests, check-in and check-out dates, and provide the total cost.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "number_of_adults": "3",
                        "rating": "3.60",
                        "where_to": "London"
                    }
                },
                {
                    "bookhouse": {
                        "check_in_date": "2019-03-03",
                        "check_out_date": "2019-03-10",
                        "number_of_adults": "3",
                        "where_to": "London"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "check_in_date",
                    "check_out_date",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#number_of_adults='3', #rating='3.60', #where_to='London')",
                "where_to, number_of_adults, check_in_date, check_out_date, rating, address, phone_number, total_price, has_laundry_service = bookhouse(#check_in_date='2019-03-03', #check_out_date='2019-03-10', #number_of_adults=number_of_adults, #where_to=where_to)"
            ],
            "middle_arguments": [
                "check_in_date",
                "total_price",
                "check_out_date",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "number_of_adults": "3",
                "rating": "3.60",
                "where_to": "London",
                "check_in_date": "2019-03-03",
                "check_out_date": "2019-03-10"
            }
        }
    },
    {
        "input": "Please attempt to book a table for four people at Iyasare restaurant in Berkeley on March 11th at 7:15 pm, ensuring that there are outdoor seating options available.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Japanese",
                        "has_vegetarian_options": "True",
                        "location": "Berkeley"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-11",
                        "location": "Berkeley",
                        "number_of_seats": "2",
                        "restaurant_name": "Iyasare",
                        "time": "14:00"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-11",
                        "location": "Berkeley",
                        "number_of_seats": "4",
                        "restaurant_name": "Iyasare",
                        "time": "19:15"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Japanese', #has_vegetarian_options='True', #location='Berkeley')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-11', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='14:00')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Japanese",
                "has_vegetarian_options": "True",
                "location": "Berkeley",
                "date": "2019-03-11",
                "number_of_seats": "2",
                "time": "14:00"
            }
        }
    },
    {
        "input": "Find a house in Chicago with a rating of 4.6 or higher, ensuring it has laundry service, for a stay in Chicago.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "has_laundry_service": "True",
                        "rating": "4.60",
                        "where_to": "Chicago"
                    }
                },
                {
                    "searchhouse": {
                        "has_laundry_service": "True",
                        "number_of_adults": "2",
                        "rating": "4.60",
                        "where_to": "Chicago"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#has_laundry_service='True', #rating='4.60', #where_to='Chicago')",
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#has_laundry_service=has_laundry_service, #number_of_adults=number_of_adults, #rating=rating, #where_to=where_to)"
            ],
            "middle_arguments": [
                "total_price",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "has_laundry_service": "True",
                "rating": "4.60",
                "where_to": "Chicago"
            }
        }
    },
    {
        "input": "Find a house in San Diego with a minimum rating of 3.9, for 1 person, and with laundry service available, and proceed with the booking for check-in on March 3rd and check-out on March 4th.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "has_laundry_service": "True",
                        "number_of_adults": "1",
                        "rating": "3.90",
                        "where_to": "San Diego"
                    }
                },
                {
                    "bookhouse": {
                        "check_in_date": "2019-03-03",
                        "check_out_date": "2019-03-04",
                        "number_of_adults": "1",
                        "where_to": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "check_in_date",
                    "check_out_date",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#has_laundry_service='True', #number_of_adults='1', #rating='3.90', #where_to='San Diego')",
                "where_to, number_of_adults, check_in_date, check_out_date, rating, address, phone_number, total_price, has_laundry_service = bookhouse(#check_in_date='2019-03-03', #check_out_date='2019-03-04', #number_of_adults=number_of_adults, #where_to=where_to)"
            ],
            "middle_arguments": [
                "check_in_date",
                "total_price",
                "check_out_date",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "has_laundry_service": "True",
                "number_of_adults": "1",
                "rating": "3.90",
                "where_to": "San Diego",
                "check_in_date": "2019-03-03",
                "check_out_date": "2019-03-04"
            }
        }
    },
    {
        "input": "Find and book a Sedan rental car to pick up at 6:30 pm in New York on March 6th and return on March 8th without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Sedan",
                        "city": "New York",
                        "end_date": "2019-03-08",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-06"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-08",
                        "pickup_location": "JFK International Airport",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-06"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Sedan', #city='New York', #end_date='2019-03-08', #pickup_time='18:30', #start_date='2019-03-06')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Sedan",
                "city": "New York",
                "end_date": "2019-03-08",
                "pickup_time": "18:30",
                "start_date": "2019-03-06",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Find me a round trip flight from Los Angeles to Portland leaving on March 5th and returning on March 13th, I need three Economy tickets and I don't have a preference for the class.",
        "output": {
            "used_app": [
                "Flights",
                "Flights"
            ],
            "used_api": [
                {
                    "searchroundtripflights": {
                        "departure_date": "2019-03-05",
                        "destination_airport": "Portland",
                        "origin_airport": "Los Angeles",
                        "return_date": "2019-03-13"
                    }
                },
                {
                    "searchroundtripflights": {
                        "departure_date": "2019-03-05",
                        "destination_airport": "Portland",
                        "number_of_tickets": "3",
                        "origin_airport": "Los Angeles",
                        "return_date": "2019-03-13",
                        "seating_class": "Economy"
                    }
                }
            ],
            "result_arguments": [
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "return_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "inbound_arrival_time",
                    "inbound_departure_time",
                    "price",
                    "airlines"
                ],
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "return_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "inbound_arrival_time",
                    "inbound_departure_time",
                    "price",
                    "airlines"
                ]
            ],
            "api_results": [
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, return_date, is_nonstop, outbound_departure_time, outbound_arrival_time, inbound_arrival_time, inbound_departure_time, price, airlines = searchroundtripflights(#departure_date='2019-03-05', #destination_airport='Portland', #origin_airport='Los Angeles', #return_date='2019-03-13')",
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, return_date, is_nonstop, outbound_departure_time, outbound_arrival_time, inbound_arrival_time, inbound_departure_time, price, airlines = searchroundtripflights(#departure_date=departure_date, #destination_airport=destination_airport, #number_of_tickets=number_of_tickets, #origin_airport=origin_airport, #return_date=return_date, #seating_class=seating_class)"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "price",
                "outbound_arrival_time",
                "outbound_departure_time",
                "departure_date",
                "seating_class",
                "inbound_departure_time",
                "inbound_arrival_time",
                "is_nonstop",
                "return_date",
                "airlines",
                "destination_airport",
                "origin_airport"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-05",
                "destination_airport": "Portland",
                "origin_airport": "Los Angeles",
                "return_date": "2019-03-13"
            }
        }
    },
    {
        "input": "I need to make a public payment of $89 to Rachel using my debit card, then request a private transaction of $130 from Tom, and finally make a public payment of $169 to Yumi from my amex.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "89",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Rachel"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "130",
                        "private_visibility": "True",
                        "receiver": "Tom"
                    }
                },
                {
                    "makepayment": {
                        "amount": "169",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Yumi"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='89', #payment_method='debit card', #private_visibility='False', #receiver='Rachel')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "89",
                "payment_method": "debit card",
                "private_visibility": "False",
                "receiver": "Rachel"
            }
        }
    },
    {
        "input": "Provide me with a train reservation for one seat on the 6:10 am train departing from Santa Fe Depot in San Diego to Union Station in Los Angeles on March 12th, including travel insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-12",
                        "from": "San Diego",
                        "to": "Los Angeles"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-12",
                        "from": "San Diego",
                        "journey_start_time": "06:10",
                        "number_of_adults": "1",
                        "to": "Los Angeles",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-12', #from='San Diego', #to='Los Angeles')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-12",
                "from": "San Diego",
                "to": "Los Angeles"
            }
        }
    },
    {
        "input": "Please pay Amelia $84 from your app balance, make the transaction public, then request $93 from Isabella and finally send $112 to Mahmoud from your credit card.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "84",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Amelia"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "93",
                        "private_visibility": "False",
                        "receiver": "Isabella"
                    }
                },
                {
                    "makepayment": {
                        "amount": "112",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Mahmoud"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='84', #payment_method='app balance', #private_visibility='False', #receiver='Amelia')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "84",
                "payment_method": "app balance",
                "private_visibility": "False",
                "receiver": "Amelia"
            }
        }
    },
    {
        "input": "Find a drama event in Los Angeles on March 7th and provide the ticket price and address for the Theatre Raymond Kabbaz.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-07",
                        "event_type": "Music"
                    }
                },
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-07",
                        "event_type": "Theater"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Los Angeles', #date='2019-03-07', #event_type='Music')",
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city=city, #date=date, #event_type=event_type)"
            ],
            "middle_arguments": [
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Los Angeles",
                "date": "2019-03-07",
                "event_type": "Music"
            }
        }
    },
    {
        "input": "I would like to rent an uninsured Ford Focus Hatchback from Kingsford Smith International Airport in Sydney, Australia on March 10th at 3:30 pm and return it on March 12th without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Sydney",
                        "end_date": "2019-03-12",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-10"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-12",
                        "pickup_location": "Kingsford Smith International Airport",
                        "pickup_time": "15:30",
                        "start_date": "2019-03-10"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Sydney', #end_date='2019-03-12', #pickup_time='15:30', #start_date='2019-03-10')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Sydney",
                "end_date": "2019-03-12",
                "pickup_time": "15:30",
                "start_date": "2019-03-10",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "I want to book tickets for a one-stop bus for 3 people departing from Sacramento to Las Vegas on March 3rd, with additional luggage, and I need the tickets to be reserved.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-03",
                        "from_city": "Sacramento",
                        "num_passengers": "3",
                        "to_city": "Las Vegas"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-03",
                        "departure_time": "07:10",
                        "from_city": "Sacramento",
                        "num_passengers": "3",
                        "to_city": "Las Vegas"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='one-stop', #departure_date='2019-03-03', #from_city='Sacramento', #num_passengers='3', #to_city='Las Vegas')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "one-stop",
                "departure_date": "2019-03-03",
                "from_city": "Sacramento",
                "num_passengers": "3",
                "to_city": "Las Vegas",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "Please book a Buick Regal Sportback sedan for me in Warsaw from Sunday this week at 14:00 until Monday next week, without adding insurance, and confirm the cost per day is $34.00.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Warsaw",
                        "end_date": "2019-03-04",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-03"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-04",
                        "pickup_location": "Warsaw Chopin Airport",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-03"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Warsaw', #end_date='2019-03-04', #pickup_time='14:00', #start_date='2019-03-03')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Warsaw",
                "end_date": "2019-03-04",
                "pickup_time": "14:00",
                "start_date": "2019-03-03",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Find a one way Economy class flight for four people from Portland, OR to Vancouver on the 11th of this month with United Airlines departing at 9:50 am for $230.",
        "output": {
            "used_app": [
                "Flights",
                "Flights"
            ],
            "used_api": [
                {
                    "searchonewayflight": {
                        "departure_date": "2019-03-11",
                        "destination_airport": "Vancouver",
                        "origin_airport": "Portland"
                    }
                },
                {
                    "searchonewayflight": {
                        "departure_date": "2019-03-11",
                        "destination_airport": "Vancouver",
                        "number_of_tickets": "4",
                        "origin_airport": "Portland",
                        "seating_class": "Economy"
                    }
                }
            ],
            "result_arguments": [
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "price",
                    "airlines"
                ],
                [
                    "number_of_tickets",
                    "seating_class",
                    "origin_airport",
                    "destination_airport",
                    "departure_date",
                    "is_nonstop",
                    "outbound_departure_time",
                    "outbound_arrival_time",
                    "price",
                    "airlines"
                ]
            ],
            "api_results": [
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, is_nonstop, outbound_departure_time, outbound_arrival_time, price, airlines = searchonewayflight(#departure_date='2019-03-11', #destination_airport='Vancouver', #origin_airport='Portland')",
                "number_of_tickets, seating_class, origin_airport, destination_airport, departure_date, is_nonstop, outbound_departure_time, outbound_arrival_time, price, airlines = searchonewayflight(#departure_date=departure_date, #destination_airport=destination_airport, #number_of_tickets=number_of_tickets, #origin_airport=origin_airport, #seating_class=seating_class)"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "price",
                "outbound_arrival_time",
                "outbound_departure_time",
                "departure_date",
                "seating_class",
                "is_nonstop",
                "airlines",
                "destination_airport",
                "origin_airport"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-11",
                "destination_airport": "Vancouver",
                "origin_airport": "Portland"
            }
        }
    },
    {
        "input": "Please search for a rental car in Sydney, NSW from March 11th to March 14th, with a pick-up time of 3:00 PM, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Sydney",
                        "end_date": "2019-03-14",
                        "pickup_time": "15:00",
                        "start_date": "2019-03-11"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-14",
                        "pickup_location": "Kingsford Smith International Airport",
                        "pickup_time": "15:00",
                        "start_date": "2019-03-11"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Sydney', #end_date='2019-03-14', #pickup_time='15:00', #start_date='2019-03-11')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Sydney",
                "end_date": "2019-03-14",
                "pickup_time": "15:00",
                "start_date": "2019-03-11",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Please purchase 2 fully refundable train tickets for a journey from Los Angeles to Phoenix on March 9th, departing at 6:30 am, and ensure travel insurance is included.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-09",
                        "from": "Los Angeles",
                        "number_of_adults": "2",
                        "to": "Phoenix"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-09",
                        "from": "Los Angeles",
                        "journey_start_time": "06:30",
                        "number_of_adults": "2",
                        "to": "Phoenix",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-09', #from='Los Angeles', #number_of_adults='2', #to='Phoenix')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-09",
                "from": "Los Angeles",
                "number_of_adults": "2",
                "to": "Phoenix"
            }
        }
    },
    {
        "input": "I would like to reserve a table for 3 at La Briciola in San Francisco tomorrow morning at 11:30.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Francisco",
                        "number_of_seats": "3",
                        "restaurant_name": "La Briciola",
                        "time": "11:00"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Francisco",
                        "number_of_seats": "3",
                        "restaurant_name": "La Briciola",
                        "time": "11:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location='San Francisco', #number_of_seats='3', #restaurant_name='La Briciola', #time='11:00')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "rating",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "date"
            ],
            "user_aware_arguments": {
                "date": "2019-03-01",
                "location": "San Francisco",
                "number_of_seats": "3",
                "restaurant_name": "La Briciola",
                "time": "11:00"
            }
        }
    },
    {
        "input": "USER: I need to request a payment of $175 from Margaret, ensuring it is not publicly visible and using my app balance as the payment method.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "175",
                        "private_visibility": "False",
                        "receiver": "Margaret"
                    }
                },
                {
                    "makepayment": {
                        "amount": "168",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Victoria"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='175', #private_visibility='False', #receiver='Margaret')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='app balance', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "175",
                "private_visibility": "False",
                "receiver": "Margaret",
                "payment_method": "app balance"
            }
        }
    },
    {
        "input": "I would like to purchase 2 tickets for the movie Toy Story 4, showing in imax at Union City on March 6th at 22:15.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "genre": "Animation",
                        "location": "Union City",
                        "show_type": "imax"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Union City",
                        "movie_name": "Toy Story 4",
                        "number_of_tickets": "2",
                        "show_date": "2019-03-06",
                        "show_time": "22:15",
                        "show_type": "imax"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#genre='Animation', #location='Union City', #show_type='imax')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='2', #show_date='2019-03-06', #show_time='22:15', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "genre": "Animation",
                "location": "Union City",
                "show_type": "imax",
                "number_of_tickets": "2",
                "show_date": "2019-03-06",
                "show_time": "22:15"
            }
        }
    },
    {
        "input": "Find me a restaurant in Belmont with moderate price range, specializing in seafood like Lobster, and make a reservation for 2 people at China Village Seafood Restaurant on March 1st at 12:30 PM.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Seafood",
                        "location": "Belmont",
                        "price_range": "moderate"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "Belmont",
                        "number_of_seats": "2",
                        "restaurant_name": "China Village Seafood Restaurant",
                        "time": "12:30"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Seafood', #location='Belmont', #price_range='moderate')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='12:30')"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Seafood",
                "location": "Belmont",
                "price_range": "moderate",
                "date": "2019-03-01",
                "number_of_seats": "2",
                "time": "12:30"
            }
        }
    },
    {
        "input": "Find and book 2 flexible tickets with trip insurance for the Train leaving from Chicago Union Station to New York on March 2nd at 8 am.",
        "output": {
            "used_app": [
                "Trains",
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-02",
                        "from": "Chicago",
                        "number_of_adults": "2",
                        "to": "New York"
                    }
                },
                {
                    "findtrains": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-02",
                        "from": "Chicago",
                        "number_of_adults": "2",
                        "to": "New York"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-02",
                        "from": "Chicago",
                        "journey_start_time": "08:00",
                        "number_of_adults": "2",
                        "to": "New York",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-02', #from='Chicago', #number_of_adults='2', #to='New York')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class=class, #date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-02",
                "from": "Chicago",
                "number_of_adults": "2",
                "to": "New York"
            }
        }
    },
    {
        "input": "I would like to send $116 from my debit card to Amelia in private, request $49 from Mahmoud in public, and transfer $33 from my credit card to Margaret in public.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "116",
                        "payment_method": "debit card",
                        "private_visibility": "True",
                        "receiver": "Amelia"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "49",
                        "private_visibility": "False",
                        "receiver": "Mahmoud"
                    }
                },
                {
                    "makepayment": {
                        "amount": "33",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Margaret"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='116', #payment_method='debit card', #private_visibility='True', #receiver='Amelia')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "116",
                "payment_method": "debit card",
                "private_visibility": "True",
                "receiver": "Amelia"
            }
        }
    },
    {
        "input": "I need a train ticket from San Francisco to Sacramento on March 9th with a fully refundable feature and trip insurance included.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-09",
                        "from": "San Francisco",
                        "to": "Sacramento"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-09",
                        "from": "San Francisco",
                        "journey_start_time": "06:10",
                        "number_of_adults": "1",
                        "to": "Sacramento",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class='Flexible', #date_of_journey='2019-03-09', #from='San Francisco', #to='Sacramento')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "class": "Flexible",
                "date_of_journey": "2019-03-09",
                "from": "San Francisco",
                "to": "Sacramento"
            }
        }
    },
    {
        "input": "I would like to book a train ticket for one person from Vancouver to Portland on March 13th departing at 6:50 am, with a conditionally refundable seat and travel insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-13",
                        "from": "Vancouver",
                        "to": "Portland"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-13",
                        "from": "Vancouver",
                        "journey_start_time": "06:50",
                        "number_of_adults": "1",
                        "to": "Portland",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-13', #from='Vancouver', #to='Portland')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-13",
                "from": "Vancouver",
                "to": "Portland"
            }
        }
    },
    {
        "input": "Inquire about rental vehicle availability in Paris, France, for pickup on March 3rd at 6:30 pm until March 5th, without insurance, and confirm the price per night before finalizing the reservation.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Paris",
                        "end_date": "2019-03-05",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-03"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "SUV",
                        "end_date": "2019-03-05",
                        "pickup_location": "Orly International Airport",
                        "pickup_time": "18:30",
                        "start_date": "2019-03-03"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Paris', #end_date='2019-03-05', #pickup_time='18:30', #start_date='2019-03-03')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Paris",
                "end_date": "2019-03-05",
                "pickup_time": "18:30",
                "start_date": "2019-03-03",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Please make a private payment transaction of $147 to Peter from my app balance.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "147",
                        "private_visibility": "True",
                        "receiver": "Peter"
                    }
                },
                {
                    "makepayment": {
                        "amount": "151",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Victoria"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='147', #private_visibility='True', #receiver='Peter')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='app balance', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "147",
                "private_visibility": "True",
                "receiver": "Peter",
                "payment_method": "app balance"
            }
        }
    },
    {
        "input": "Please find me 2 economy class train tickets departing from Chicago at 8 am on March 2nd to New York, and book them for a total cost of $207.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-02",
                        "from": "Chicago",
                        "to": "New York"
                    }
                },
                {
                    "findtrains": {
                        "class": "Value",
                        "date_of_journey": "2019-03-02",
                        "from": "Chicago",
                        "number_of_adults": "2",
                        "to": "New York"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-02', #from='Chicago', #to='New York')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#class=class, #date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-02",
                "from": "Chicago",
                "to": "New York"
            }
        }
    },
    {
        "input": "I want to book a direct bus for three passengers from Anaheim to San Francisco on March 13th, with departure at 11:40 am and a cost of $49.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-13",
                        "from_city": "Anaheim",
                        "num_passengers": "3",
                        "to_city": "San Francisco"
                    }
                },
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-08",
                        "from_city": "Anaheim",
                        "num_passengers": "3",
                        "to_city": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-13', #from_city='Anaheim', #num_passengers='3', #to_city='San Francisco')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-13",
                "from_city": "Anaheim",
                "num_passengers": "3",
                "to_city": "San Francisco"
            }
        }
    },
    {
        "input": "I would like to purchase 1 ticket for the Imax showing of Toy Story 4 in Santa Rosa on March 1st at 4:15 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "genre": "Animation",
                        "location": "Santa Rosa",
                        "show_type": "imax"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Santa Rosa",
                        "movie_name": "Toy Story 4",
                        "number_of_tickets": "3",
                        "show_date": "2019-03-04",
                        "show_time": "16:45",
                        "show_type": "imax"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Santa Rosa",
                        "movie_name": "Toy Story 4",
                        "number_of_tickets": "1",
                        "show_date": "2019-03-01",
                        "show_time": "16:15",
                        "show_type": "imax"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#genre='Animation', #location='Santa Rosa', #show_type='imax')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='3', #show_date='2019-03-04', #show_time='16:45', #show_type=show_type)",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets=number_of_tickets, #show_date=show_date, #show_time=show_time, #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "genre": "Animation",
                "location": "Santa Rosa",
                "show_type": "imax",
                "number_of_tickets": "3",
                "show_date": "2019-03-04",
                "show_time": "16:45"
            }
        }
    },
    {
        "input": "I would like to book a Hatchback rental without insurance for pick up from SMF International Airport in Sacramento on March 13th at 12:00 pm and return on March 14th.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Hatchback",
                        "city": "Sacramento",
                        "end_date": "2019-03-14",
                        "pickup_time": "12:00",
                        "start_date": "2019-03-13"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-14",
                        "pickup_location": "SMF International Airport",
                        "pickup_time": "12:00",
                        "start_date": "2019-03-13"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Hatchback', #city='Sacramento', #end_date='2019-03-14', #pickup_time='12:00', #start_date='2019-03-13')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Hatchback",
                "city": "Sacramento",
                "end_date": "2019-03-14",
                "pickup_time": "12:00",
                "start_date": "2019-03-13",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Ensure that on March 11th, you need 1 Value ticket from Anaheim to Phoenix departing at 6:30 am, with trip insurance and conditionally refundable tickets.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-11",
                        "from": "Anaheim",
                        "to": "Phoenix"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-11",
                        "from": "Anaheim",
                        "journey_start_time": "06:30",
                        "number_of_adults": "1",
                        "to": "Phoenix",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-11', #from='Anaheim', #to='Phoenix')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-11",
                "from": "Anaheim",
                "to": "Phoenix"
            }
        }
    },
    {
        "input": "I would like to purchase 1 bus ticket from Portland to Vancouver on March 7th at 7:10 am with extra luggage, departing from SW Arthur & 1st and arriving at Pacific Central Station.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-07",
                        "from_city": "Portland",
                        "to_city": "Vancouver"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-07",
                        "departure_time": "07:10",
                        "from_city": "Portland",
                        "num_passengers": "1",
                        "to_city": "Vancouver"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-07', #from_city='Portland', #to_city='Vancouver')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-07",
                "from_city": "Portland",
                "to_city": "Vancouver",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "Book 4 direct bus tickets on March 1st from Las Vegas to San Diego departing at 10:50 am, ensuring no additional luggage, and confirm the starting station as Union Plaza and reaching station as El Cajon Bus Stop.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-01",
                        "from_city": "Las Vegas",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-01",
                        "departure_time": "10:50",
                        "from_city": "Las Vegas",
                        "num_passengers": "4",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-01', #from_city='Las Vegas', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-01",
                "from_city": "Las Vegas",
                "to_city": "San Diego",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I need to purchase 4 direct bus tickets from Anaheim to San Francisco departing on March 9th for $55 each.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-09",
                        "from_city": "Anaheim",
                        "num_passengers": "4",
                        "to_city": "San Francisco"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-09",
                        "departure_time": "08:50",
                        "from_city": "Anaheim",
                        "num_passengers": "4",
                        "to_city": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-09', #from_city='Anaheim', #num_passengers='4', #to_city='San Francisco')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-09",
                "from_city": "Anaheim",
                "num_passengers": "4",
                "to_city": "San Francisco",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Find a house in Atlanta for one person with a rating of 4.3 or higher, and also check for availability for three people and laundry service, but do not make a reservation.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "number_of_adults": "1",
                        "rating": "4.30",
                        "where_to": "Atlanta"
                    }
                },
                {
                    "searchhouse": {
                        "has_laundry_service": "True",
                        "number_of_adults": "3",
                        "rating": "4.30",
                        "where_to": "Atlanta"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#number_of_adults='1', #rating='4.30', #where_to='Atlanta')",
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#has_laundry_service=has_laundry_service, #number_of_adults=number_of_adults, #rating=rating, #where_to=where_to)"
            ],
            "middle_arguments": [
                "total_price",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "number_of_adults": "1",
                "rating": "4.30",
                "where_to": "Atlanta"
            }
        }
    },
    {
        "input": "I would like to search for a direct bus for 2 passengers departing from New York on March 6th, heading to Washington, without any additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-06",
                        "from_city": "New York",
                        "num_passengers": "2",
                        "to_city": "Washington"
                    }
                },
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-06",
                        "from_city": "Los Angeles",
                        "num_passengers": "2",
                        "to_city": "Anaheim"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-06",
                        "departure_time": "06:40",
                        "from_city": "Los Angeles",
                        "num_passengers": "2",
                        "to_city": "Anaheim"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-06', #from_city='New York', #num_passengers='2', #to_city='Washington')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-06",
                "from_city": "New York",
                "num_passengers": "2",
                "to_city": "Washington",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Book a Hatchback Car like Mazda 3 for rent in Atlanta, GA from March 4th at 3 pm till March 10th, including insurance, and confirm the reservation.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "car_type": "Hatchback",
                        "city": "Atlanta",
                        "end_date": "2019-03-10",
                        "pickup_time": "15:00",
                        "start_date": "2019-03-04"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-10",
                        "pickup_location": "Peachtree Station",
                        "pickup_time": "15:00",
                        "start_date": "2019-03-04"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type='Hatchback', #city='Atlanta', #end_date='2019-03-10', #pickup_time='15:00', #start_date='2019-03-04')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "car_type": "Hatchback",
                "city": "Atlanta",
                "end_date": "2019-03-10",
                "pickup_time": "15:00",
                "start_date": "2019-03-04",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Please book 1 ticket for the Babymetal Musical performance in Philadelphia on March 13th, and provide information on the event's price and location.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Philadelphia",
                        "date": "2019-03-13",
                        "event_type": "Music"
                    }
                },
                {
                    "buyeventtickets": {
                        "city": "Philadelphia",
                        "date": "2019-03-13",
                        "event_name": "Babymetal",
                        "number_of_tickets": "1"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_name",
                    "date",
                    "time",
                    "number_of_tickets",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Philadelphia', #date='2019-03-13', #event_type='Music')",
                "event_name, date, time, number_of_tickets, price_per_ticket, city, venue, venue_address = buyeventtickets(#city=city, #date=date, #event_name=event_name, #number_of_tickets='1')"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Philadelphia",
                "date": "2019-03-13",
                "event_type": "Music",
                "number_of_tickets": "1"
            }
        }
    },
    {
        "input": "Please reserve a Buick Regal Sportback Sedan for pick up in Philadelphia at PHL International Airport at 2:00 PM today, and extend the rental until Sunday, March 3rd without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Philadelphia",
                        "end_date": "2019-03-03",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-01"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-03",
                        "pickup_location": "PHL International Airport",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-01"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Philadelphia', #end_date='2019-03-03', #pickup_time='14:00', #start_date='2019-03-01')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Philadelphia",
                "end_date": "2019-03-03",
                "pickup_time": "14:00",
                "start_date": "2019-03-01",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Book one seat with insurance for the train departing on March 10th at 8 am from Sacramento to Fresno, confirming the departure from Sacramento Valley Station and arrival at Fresno Station.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-10",
                        "from": "Sacramento",
                        "to": "Fresno"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-10",
                        "from": "Sacramento",
                        "journey_start_time": "08:00",
                        "number_of_adults": "1",
                        "to": "Fresno",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-10', #from='Sacramento', #to='Fresno')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-10",
                "from": "Sacramento",
                "to": "Fresno"
            }
        }
    },
    {
        "input": "Purchase 2 movie tickets for the movie \"Hustlers\" for a regular show on March 8th at 10:45 pm in Santa Clara.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "buymovietickets": {
                        "location": "San Rafael",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "2",
                        "show_date": "2019-03-06",
                        "show_time": "22:00",
                        "show_type": "regular"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Santa Clara",
                        "movie_name": "Hustlers",
                        "number_of_tickets": "2",
                        "show_date": "2019-03-08",
                        "show_time": "22:45",
                        "show_type": "imax"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location='San Rafael', #movie_name='Hustlers', #number_of_tickets='2', #show_date='2019-03-06', #show_time='22:00', #show_type='regular')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets=number_of_tickets, #show_date=show_date, #show_time=show_time, #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "show_time",
                "street_address",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "San Rafael",
                "movie_name": "Hustlers",
                "number_of_tickets": "2",
                "show_date": "2019-03-06",
                "show_time": "22:00",
                "show_type": "regular"
            }
        }
    },
    {
        "input": "I would like to reserve a sedan like Audi A8 for rental in Anaheim at the Anaheim Intermodal Center on March 13th at 8:00 PM until March 14th, without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Anaheim",
                        "end_date": "2019-03-14",
                        "pickup_time": "20:00",
                        "start_date": "2019-03-13"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Sedan",
                        "end_date": "2019-03-14",
                        "pickup_location": "Anaheim Intermodal Center",
                        "pickup_time": "20:00",
                        "start_date": "2019-03-13"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Anaheim', #end_date='2019-03-14', #pickup_time='20:00', #start_date='2019-03-13')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Anaheim",
                "end_date": "2019-03-14",
                "pickup_time": "20:00",
                "start_date": "2019-03-13",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Find me a direct bus leaving from Anaheim to Los Angeles on March 4th at 10:20 am, with 1 ticket needed and no additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-04",
                        "from_city": "Anaheim",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-04",
                        "from_city": "Anaheim",
                        "num_passengers": "1",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-04",
                        "departure_time": "10:20",
                        "from_city": "Anaheim",
                        "num_passengers": "1",
                        "to_city": "Los Angeles"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-04', #from_city='Anaheim', #to_city='Los Angeles')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-04",
                "from_city": "Anaheim",
                "to_city": "Los Angeles",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Book a house in San Francisco with laundry service for 1 adult for check-in on March 4th and check-out on March 5th.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "has_laundry_service": "True",
                        "number_of_adults": "1",
                        "where_to": "San Francisco"
                    }
                },
                {
                    "bookhouse": {
                        "check_in_date": "2019-03-04",
                        "check_out_date": "2019-03-05",
                        "number_of_adults": "1",
                        "where_to": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "check_in_date",
                    "check_out_date",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#has_laundry_service='True', #number_of_adults='1', #where_to='San Francisco')",
                "where_to, number_of_adults, check_in_date, check_out_date, rating, address, phone_number, total_price, has_laundry_service = bookhouse(#check_in_date='2019-03-04', #check_out_date='2019-03-05', #number_of_adults=number_of_adults, #where_to=where_to)"
            ],
            "middle_arguments": [
                "check_in_date",
                "total_price",
                "check_out_date",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "has_laundry_service": "True",
                "number_of_adults": "1",
                "where_to": "San Francisco",
                "check_in_date": "2019-03-04",
                "check_out_date": "2019-03-05"
            }
        }
    },
    {
        "input": "Please find a direct bus for three people departing on the 13th of March from San Francisco to Long Beach, CA, with a departure station at Transbay Terminal and an arrival station at Downtown Station, considering a $44 fare for a bus departing at 7:40 am.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-13",
                        "from_city": "San Francisco",
                        "to_city": "Long Beach"
                    }
                },
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-13",
                        "from_city": "San Francisco",
                        "num_passengers": "3",
                        "to_city": "Long Beach"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-13', #from_city='San Francisco', #to_city='Long Beach')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-13",
                "from_city": "San Francisco",
                "to_city": "Long Beach"
            }
        }
    },
    {
        "input": "I would like to reserve 2 bus tickets for March 10th from Los Angeles to San Diego, with additional luggage included.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-10",
                        "from_city": "Los Angeles",
                        "num_passengers": "2",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-10",
                        "departure_time": "06:50",
                        "from_city": "Los Angeles",
                        "num_passengers": "2",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-10', #from_city='Los Angeles', #num_passengers='2', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-10",
                "from_city": "Los Angeles",
                "num_passengers": "2",
                "to_city": "San Diego",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "I would like to rent a Hatchback from the Mazda 3 line at Warsaw Chopin Airport from March 10th at 12:00 until March 11th without adding insurance.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Warsaw",
                        "end_date": "2019-03-11",
                        "pickup_time": "12:00",
                        "start_date": "2019-03-10"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "False",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-11",
                        "pickup_location": "Warsaw Chopin Airport",
                        "pickup_time": "12:00",
                        "start_date": "2019-03-10"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Warsaw', #end_date='2019-03-11', #pickup_time='12:00', #start_date='2019-03-10')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='False', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Warsaw",
                "end_date": "2019-03-11",
                "pickup_time": "12:00",
                "start_date": "2019-03-10",
                "add_insurance": "False"
            }
        }
    },
    {
        "input": "Find a Filipino restaurant in Geyserville, but then book a table for 2 at Diavola Pizzeria & Salumeria in Geyserville for March 1st at 1 pm, serving Italian cuisine with outdoor seating.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "findrestaurants": {
                        "category": "Italian",
                        "has_seating_outdoors": "True",
                        "location": "Geyserville"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "Geyserville",
                        "number_of_seats": "2",
                        "restaurant_name": "Diavola Pizzeria & Salumeria",
                        "time": "13:00"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, price_range, location, category = findrestaurants(#category='Italian', #has_seating_outdoors='True', #location='Geyserville')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location=location, #number_of_seats='2', #restaurant_name=restaurant_name, #time='13:00')"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "rating",
                "date"
            ],
            "user_aware_arguments": {
                "category": "Italian",
                "has_seating_outdoors": "True",
                "location": "Geyserville",
                "date": "2019-03-01",
                "number_of_seats": "2",
                "time": "13:00"
            }
        }
    },
    {
        "input": "Find me an action movie directed by David Leitch and starring Alex King, besides Hobbs and Shaw.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "reviewmovies": {
                        "cast": "Alex King",
                        "directed_by": "David Leitch",
                        "genre": "Action"
                    }
                },
                {
                    "reviewmovies": {
                        "cast": "Alex King",
                        "directed_by": "David Leitch",
                        "genre": "Action"
                    }
                }
            ],
            "result_arguments": [
                [
                    "movie_title",
                    "genre",
                    "percent_rating",
                    "cast",
                    "directed_by"
                ],
                [
                    "movie_title",
                    "genre",
                    "percent_rating",
                    "cast",
                    "directed_by"
                ]
            ],
            "api_results": [
                "movie_title, genre, percent_rating, cast, directed_by = reviewmovies(#cast='Alex King', #directed_by='David Leitch', #genre='Action')",
                "movie_title, genre, percent_rating, cast, directed_by = reviewmovies(#cast=cast, #directed_by=directed_by, #genre=genre)"
            ],
            "middle_arguments": [
                "cast",
                "genre",
                "directed_by",
                "percent_rating",
                "movie_title"
            ],
            "user_aware_arguments": {
                "cast": "Alex King",
                "directed_by": "David Leitch",
                "genre": "Action"
            }
        }
    },
    {
        "input": "I need to purchase 2 bus tickets from Los Angeles to Anaheim for the departure date of March 2nd at 6 am, without any additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-02",
                        "from_city": "Los Angeles",
                        "to_city": "Anaheim"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-02",
                        "departure_time": "06:00",
                        "from_city": "Los Angeles",
                        "num_passengers": "2",
                        "to_city": "Anaheim"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-02', #from_city='Los Angeles', #to_city='Anaheim')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-02",
                "from_city": "Los Angeles",
                "to_city": "Anaheim",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I need to rent a hatchback car from Toronto Pearson International Airport on March 1st at 2 pm until March 6th, and I want to add insurance to the reservation.",
        "output": {
            "used_app": [
                "Rents",
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Toronto",
                        "end_date": "2019-03-06",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-02"
                    }
                },
                {
                    "getcarsavailable": {
                        "car_type": "Hatchback",
                        "city": "Toronto",
                        "end_date": "2019-03-06",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-01"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Hatchback",
                        "end_date": "2019-03-06",
                        "pickup_location": "Toronto Pearson International Airport",
                        "pickup_time": "14:00",
                        "start_date": "2019-03-01"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Toronto', #end_date='2019-03-06', #pickup_time='14:00', #start_date='2019-03-02')",
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#car_type=car_type, #city=city, #end_date=end_date, #pickup_time=pickup_time, #start_date=start_date)",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Toronto",
                "end_date": "2019-03-06",
                "pickup_time": "14:00",
                "start_date": "2019-03-02",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Make a private transfer payment request to Wilson for $42 and then proceed with a public transaction of $155 to Yumi using your JCB credit card.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "42",
                        "private_visibility": "True",
                        "receiver": "Wilson"
                    }
                },
                {
                    "makepayment": {
                        "amount": "155",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Yumi"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='42', #private_visibility='True', #receiver='Wilson')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='credit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "42",
                "private_visibility": "True",
                "receiver": "Wilson",
                "payment_method": "credit card"
            }
        }
    },
    {
        "input": "I would like to request a private payment of $30 to Mary using my app balance.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "30",
                        "private_visibility": "True",
                        "receiver": "Mary"
                    }
                },
                {
                    "makepayment": {
                        "amount": "94",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Yumi"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='30', #private_visibility='True', #receiver='Mary')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='app balance', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "30",
                "private_visibility": "True",
                "receiver": "Mary",
                "payment_method": "app balance"
            }
        }
    },
    {
        "input": "I would like to purchase 2 regular tickets for the Action movie \"Mission Mangal\" at Century 20 Great Mall and XD in Milpitas on March 2nd at 10:00 PM.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "genre": "Action",
                        "location": "Milpitas",
                        "theater_name": "Century 20 Great Mall and XD"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Milpitas",
                        "movie_name": "Mission Mangal",
                        "number_of_tickets": "2",
                        "show_date": "2019-03-02",
                        "show_time": "22:00",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#genre='Action', #location='Milpitas', #theater_name='Century 20 Great Mall and XD')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='2', #show_date='2019-03-02', #show_time='22:00', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "genre": "Action",
                "location": "Milpitas",
                "theater_name": "Century 20 Great Mall and XD",
                "number_of_tickets": "2",
                "show_date": "2019-03-02",
                "show_time": "22:00"
            }
        }
    },
    {
        "input": "Book a single train ticket departing from Anaheim intermodal center to Sacramento Valley Station on March 12th at 6:50 am for $132, including travel insurance, and confirm the purchase.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-12",
                        "from": "Anaheim",
                        "to": "Sacramento"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-12",
                        "from": "Anaheim",
                        "journey_start_time": "06:50",
                        "number_of_adults": "1",
                        "to": "Sacramento",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-12', #from='Anaheim', #to='Sacramento')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-12",
                "from": "Anaheim",
                "to": "Sacramento"
            }
        }
    },
    {
        "input": "Instruct the system to book a train ticket for 3 adults from Los Angeles to Anaheim on March 10th at 6 am, with trip insurance, conditionally refundable tickets, departing from Union Station and arriving at Anaheim Intermodal Center.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-10",
                        "from": "Los Angeles",
                        "number_of_adults": "3",
                        "to": "Anaheim"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-10",
                        "from": "Los Angeles",
                        "journey_start_time": "06:00",
                        "number_of_adults": "3",
                        "to": "Anaheim",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-10', #from='Los Angeles', #number_of_adults='3', #to='Anaheim')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-10",
                "from": "Los Angeles",
                "number_of_adults": "3",
                "to": "Anaheim"
            }
        }
    },
    {
        "input": "Find me a music event happening on March 9th in New York, specifically at Sony Hall, located at 235 West 46th Street.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "New York",
                        "date": "2019-03-09",
                        "event_type": "Music"
                    }
                },
                {
                    "findevents": {
                        "city": "Cape Town",
                        "date": "2019-03-09",
                        "event_type": "Theater"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='New York', #date='2019-03-09', #event_type='Music')",
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city=city, #date=date, #event_type=event_type)"
            ],
            "middle_arguments": [
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "New York",
                "date": "2019-03-09",
                "event_type": "Music"
            }
        }
    },
    {
        "input": "Find me child-friendly museums with free entry in San Diego and provide me with their phone number.",
        "output": {
            "used_app": [
                "Travel",
                "Travel"
            ],
            "used_api": [
                {
                    "findattractions": {
                        "category": "Museum",
                        "free_entry": "True",
                        "good_for_kids": "True",
                        "location": "San Diego"
                    }
                },
                {
                    "findattractions": {
                        "category": "Museum",
                        "free_entry": "True",
                        "good_for_kids": "True",
                        "location": "London"
                    }
                }
            ],
            "result_arguments": [
                [
                    "location",
                    "attraction_name",
                    "category",
                    "phone_number",
                    "free_entry",
                    "good_for_kids"
                ],
                [
                    "location",
                    "attraction_name",
                    "category",
                    "phone_number",
                    "free_entry",
                    "good_for_kids"
                ]
            ],
            "api_results": [
                "location, attraction_name, category, phone_number, free_entry, good_for_kids = findattractions(#category='Museum', #free_entry='True', #good_for_kids='True', #location='San Diego')",
                "location, attraction_name, category, phone_number, free_entry, good_for_kids = findattractions(#category=category, #free_entry=free_entry, #good_for_kids=good_for_kids, #location=location)"
            ],
            "middle_arguments": [
                "free_entry",
                "attraction_name",
                "good_for_kids",
                "category",
                "phone_number",
                "location"
            ],
            "user_aware_arguments": {
                "category": "Museum",
                "free_entry": "True",
                "good_for_kids": "True",
                "location": "San Diego"
            }
        }
    },
    {
        "input": "Please search for a train departing from Los Angeles (LAX) to Anaheim on March 13th, departing at 6 am, and provide information on the station it leaves from, the cost, and the option to purchase one ticket with travel insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-13",
                        "from": "Los Angeles",
                        "to": "Anaheim"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-13",
                        "from": "Los Angeles",
                        "journey_start_time": "06:00",
                        "number_of_adults": "1",
                        "to": "Anaheim",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-13', #from='Los Angeles', #to='Anaheim')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-13",
                "from": "Los Angeles",
                "to": "Anaheim"
            }
        }
    },
    {
        "input": "Find and purchase three 3D tickets for the film \"Where'd You Go, Bernadette\" at Raven Film Center in Healdsburg for the show on March 2nd at 5:15 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "location": "Healdsburg",
                        "show_type": "3d",
                        "theater_name": "Raven Film Center"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Healdsburg",
                        "movie_name": "Where'd You Go, Bernadette",
                        "number_of_tickets": "3",
                        "show_date": "2019-03-02",
                        "show_time": "17:15",
                        "show_type": "3d"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#location='Healdsburg', #show_type='3d', #theater_name='Raven Film Center')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='3', #show_date='2019-03-02', #show_time='17:15', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Healdsburg",
                "show_type": "3d",
                "theater_name": "Raven Film Center",
                "number_of_tickets": "3",
                "show_date": "2019-03-02",
                "show_time": "17:15"
            }
        }
    },
    {
        "input": "I would like to purchase 1 ticket for a bus leaving at 8:20 am from Fresno to San Diego on March 11th, without any additional luggage, and I would like to know the arrival station.",
        "output": {
            "used_app": [
                "Buses",
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-11",
                        "from_city": "Fresno",
                        "to_city": "San Diego"
                    }
                },
                {
                    "findbus": {
                        "departure_date": "2019-03-11",
                        "from_city": "Fresno",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-11",
                        "departure_time": "08:20",
                        "from_city": "Fresno",
                        "num_passengers": "1",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-11', #from_city='Fresno', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date=departure_date, #from_city=from_city, #to_city=to_city)",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-11",
                "from_city": "Fresno",
                "to_city": "San Diego",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Book two train tickets for the journey from Anaheim, CA to Sacramento, CA on March 7th at 6:50 am, costing $233 each, with trip insurance included.",
        "output": {
            "used_app": [
                "Trains",
                "Trains",
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-07",
                        "from": "San Diego",
                        "to": "Sacramento"
                    }
                },
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-07",
                        "from": "San Diego",
                        "number_of_adults": "2",
                        "to": "Sacramento"
                    }
                },
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-07",
                        "from": "Anaheim",
                        "number_of_adults": "2",
                        "to": "Sacramento"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-07",
                        "from": "Anaheim",
                        "journey_start_time": "06:50",
                        "number_of_adults": "2",
                        "to": "Sacramento",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-07', #from='San Diego', #to='Sacramento')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-07",
                "from": "San Diego",
                "to": "Sacramento"
            }
        }
    },
    {
        "input": "I would like to reserve an SUV rental car from Union Plaza in Las Vegas on March 6th at 4:30 pm with insurance, and return it on March 13th.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "Las Vegas",
                        "end_date": "2019-03-13",
                        "pickup_time": "16:30",
                        "start_date": "2019-03-06"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "SUV",
                        "end_date": "2019-03-13",
                        "pickup_location": "Union Plaza",
                        "pickup_time": "16:30",
                        "start_date": "2019-03-06"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='Las Vegas', #end_date='2019-03-13', #pickup_time='16:30', #start_date='2019-03-06')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "Las Vegas",
                "end_date": "2019-03-13",
                "pickup_time": "16:30",
                "start_date": "2019-03-06",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "I want to book a train ticket for one adult from Chicago to New York on March 10th, departing at 7:30 am, with trip insurance included.",
        "output": {
            "used_app": [
                "Trains",
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-10",
                        "from": "Philadelphia",
                        "number_of_adults": "1",
                        "to": "New York"
                    }
                },
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-10",
                        "from": "Chicago",
                        "number_of_adults": "1",
                        "to": "New York"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-10",
                        "from": "Chicago",
                        "journey_start_time": "07:30",
                        "number_of_adults": "1",
                        "to": "New York",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-10', #from='Philadelphia', #number_of_adults='1', #to='New York')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey=date_of_journey, #from=from, #number_of_adults=number_of_adults, #to=to)",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-10",
                "from": "Philadelphia",
                "number_of_adults": "1",
                "to": "New York"
            }
        }
    },
    {
        "input": "I would like to book a flexible train ticket for one passenger from Washington to Chicago on March 6th departing at 9:40 am.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-06",
                        "from": "Washington",
                        "to": "Chicago"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Flexible",
                        "date_of_journey": "2019-03-06",
                        "from": "Washington",
                        "journey_start_time": "09:40",
                        "number_of_adults": "1",
                        "to": "Chicago",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-06', #from='Washington', #to='Chicago')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-06",
                "from": "Washington",
                "to": "Chicago"
            }
        }
    },
    {
        "input": "I would like to rent a Sedan Audi A8 from JFK International Airport in New York starting on March 11th at 7:30 pm until March 14th, and I would like to add insurance to the reservation.",
        "output": {
            "used_app": [
                "Rents",
                "Rents"
            ],
            "used_api": [
                {
                    "getcarsavailable": {
                        "city": "New York",
                        "end_date": "2019-03-14",
                        "pickup_time": "19:30",
                        "start_date": "2019-03-11"
                    }
                },
                {
                    "reservecar": {
                        "add_insurance": "True",
                        "car_type": "Sedan",
                        "end_date": "2019-03-14",
                        "pickup_location": "JFK International Airport",
                        "pickup_time": "19:30",
                        "start_date": "2019-03-11"
                    }
                }
            ],
            "result_arguments": [
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "city",
                    "end_date",
                    "price_per_day"
                ],
                [
                    "car_type",
                    "car_name",
                    "pickup_location",
                    "start_date",
                    "pickup_time",
                    "end_date",
                    "price_per_day",
                    "add_insurance"
                ]
            ],
            "api_results": [
                "car_type, car_name, pickup_location, start_date, pickup_time, city, end_date, price_per_day = getcarsavailable(#city='New York', #end_date='2019-03-14', #pickup_time='19:30', #start_date='2019-03-11')",
                "car_type, car_name, pickup_location, start_date, pickup_time, end_date, price_per_day, add_insurance = reservecar(#add_insurance='True', #car_type=car_type, #end_date=end_date, #pickup_location=pickup_location, #pickup_time=pickup_time, #start_date=start_date)"
            ],
            "middle_arguments": [
                "start_date",
                "pickup_time",
                "car_name",
                "car_type",
                "price_per_day",
                "end_date",
                "city",
                "pickup_location",
                "add_insurance"
            ],
            "user_aware_arguments": {
                "city": "New York",
                "end_date": "2019-03-14",
                "pickup_time": "19:30",
                "start_date": "2019-03-11",
                "add_insurance": "True"
            }
        }
    },
    {
        "input": "Please make a payment request of $108 to Diego, ensuring the transaction is private and using a credit card as the payment method.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "108",
                        "private_visibility": "True",
                        "receiver": "Diego"
                    }
                },
                {
                    "makepayment": {
                        "amount": "105",
                        "payment_method": "credit card",
                        "private_visibility": "False",
                        "receiver": "Mary"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='108', #private_visibility='True', #receiver='Diego')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='credit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "108",
                "private_visibility": "True",
                "receiver": "Diego",
                "payment_method": "credit card"
            }
        }
    },
    {
        "input": "Instruct the system to purchase 4 tickets on a bus leaving from San Francisco on March 13th at 7 am to San Diego without any extra luggage and confirm the departure station as Transbay Terminal.",
        "output": {
            "used_app": [
                "Buses",
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-13",
                        "from_city": "Long Beach",
                        "to_city": "San Diego"
                    }
                },
                {
                    "findbus": {
                        "departure_date": "2019-03-13",
                        "from_city": "San Francisco",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-13",
                        "departure_time": "07:00",
                        "from_city": "San Francisco",
                        "num_passengers": "4",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-13', #from_city='Long Beach', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date=departure_date, #from_city=from_city, #to_city=to_city)",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-13",
                "from_city": "Long Beach",
                "to_city": "San Diego",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Please book 1 Value ticket for a train departing from Sacramento to Fresno on March 1st at 8 am, with a cost of $65 and including travel insurance.",
        "output": {
            "used_app": [
                "Trains",
                "Trains"
            ],
            "used_api": [
                {
                    "findtrains": {
                        "date_of_journey": "2019-03-01",
                        "from": "Sacramento",
                        "to": "Fresno"
                    }
                },
                {
                    "gettraintickets": {
                        "class": "Value",
                        "date_of_journey": "2019-03-01",
                        "from": "Sacramento",
                        "journey_start_time": "08:00",
                        "number_of_adults": "1",
                        "to": "Fresno",
                        "trip_protection": "True"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ],
                [
                    "from",
                    "to",
                    "from_station",
                    "to_station",
                    "date_of_journey",
                    "journey_start_time",
                    "total",
                    "number_of_adults",
                    "class",
                    "trip_protection"
                ]
            ],
            "api_results": [
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = findtrains(#date_of_journey='2019-03-01', #from='Sacramento', #to='Fresno')",
                "from, to, from_station, to_station, date_of_journey, journey_start_time, total, number_of_adults, class, trip_protection = gettraintickets(#class=class, #date_of_journey=date_of_journey, #from=from, #journey_start_time=journey_start_time, #number_of_adults=number_of_adults, #to=to, #trip_protection=trip_protection)"
            ],
            "middle_arguments": [
                "from_station",
                "trip_protection",
                "date_of_journey",
                "to_station",
                "class",
                "total",
                "from",
                "journey_start_time",
                "number_of_adults",
                "to"
            ],
            "user_aware_arguments": {
                "date_of_journey": "2019-03-01",
                "from": "Sacramento",
                "to": "Fresno"
            }
        }
    },
    {
        "input": "Please book a table for 2 at Little Hunan in San Jose on March 1st at 5 pm.",
        "output": {
            "used_app": [
                "Restaurants",
                "Restaurants",
                "Restaurants"
            ],
            "used_api": [
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Jose",
                        "number_of_seats": "2",
                        "restaurant_name": "Little Hunan",
                        "time": "20:00"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Jose",
                        "number_of_seats": "2",
                        "restaurant_name": "Little Hunan",
                        "time": "17:15"
                    }
                },
                {
                    "reserverestaurant": {
                        "date": "2019-03-01",
                        "location": "San Jose",
                        "number_of_seats": "2",
                        "restaurant_name": "Little Hunan",
                        "time": "17:00"
                    }
                }
            ],
            "result_arguments": [
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ],
                [
                    "restaurant_name",
                    "date",
                    "time",
                    "has_seating_outdoors",
                    "has_vegetarian_options",
                    "phone_number",
                    "rating",
                    "address",
                    "number_of_seats",
                    "price_range",
                    "location",
                    "category"
                ]
            ],
            "api_results": [
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date='2019-03-01', #location='San Jose', #number_of_seats='2', #restaurant_name='Little Hunan', #time='20:00')",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)",
                "restaurant_name, date, time, has_seating_outdoors, has_vegetarian_options, phone_number, rating, address, number_of_seats, price_range, location, category = reserverestaurant(#date=date, #location=location, #number_of_seats=number_of_seats, #restaurant_name=restaurant_name, #time=time)"
            ],
            "middle_arguments": [
                "has_vegetarian_options",
                "time",
                "number_of_seats",
                "rating",
                "has_seating_outdoors",
                "restaurant_name",
                "category",
                "phone_number",
                "address",
                "location",
                "price_range",
                "date"
            ],
            "user_aware_arguments": {
                "date": "2019-03-01",
                "location": "San Jose",
                "number_of_seats": "2",
                "restaurant_name": "Little Hunan",
                "time": "20:00"
            }
        }
    },
    {
        "input": "Make a public payment of $96 from your in-app balance to Mahmoud.",
        "output": {
            "used_app": [
                "Payment",
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "makepayment": {
                        "amount": "50",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Mary"
                    }
                },
                {
                    "requestpayment": {
                        "amount": "18",
                        "private_visibility": "False",
                        "receiver": "Emma"
                    }
                },
                {
                    "makepayment": {
                        "amount": "96",
                        "payment_method": "app balance",
                        "private_visibility": "False",
                        "receiver": "Mahmoud"
                    }
                }
            ],
            "result_arguments": [
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "payment_method, amount, receiver, private_visibility = makepayment(#amount='50', #payment_method='debit card', #private_visibility='False', #receiver='Mary')",
                "amount, receiver, private_visibility = requestpayment(#amount=amount, #private_visibility=private_visibility, #receiver=receiver)",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method=payment_method, #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "50",
                "payment_method": "debit card",
                "private_visibility": "False",
                "receiver": "Mary"
            }
        }
    },
    {
        "input": "I need four regular movie tickets for Toy Story 4 at 11:00 PM today in Union City.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "buymovietickets": {
                        "location": "Union City",
                        "movie_name": "Toy Story 4",
                        "number_of_tickets": "4",
                        "show_date": "2019-03-01",
                        "show_time": "23:00",
                        "show_type": "regular"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "Union City",
                        "movie_name": "Angel Has Fallen",
                        "number_of_tickets": "4",
                        "show_date": "2019-03-01",
                        "show_time": "22:15",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location='Union City', #movie_name='Toy Story 4', #number_of_tickets='4', #show_date='2019-03-01', #show_time='23:00', #show_type='regular')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets=number_of_tickets, #show_date=show_date, #show_time=show_time, #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "show_time",
                "street_address",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "location": "Union City",
                "movie_name": "Toy Story 4",
                "number_of_tickets": "4",
                "show_date": "2019-03-01",
                "show_time": "23:00",
                "show_type": "regular"
            }
        }
    },
    {
        "input": "I would like to purchase two tickets for the Sci-fi movie \"Ad Astra\" at Century at Tanforan and XD in San Bruno on March 10th at 11:30 pm.",
        "output": {
            "used_app": [
                "Movies",
                "Movies"
            ],
            "used_api": [
                {
                    "findmovies": {
                        "genre": "Sci-fi",
                        "location": "San Bruno",
                        "theater_name": "Century at Tanforan and XD"
                    }
                },
                {
                    "buymovietickets": {
                        "location": "San Bruno",
                        "movie_name": "Ad Astra",
                        "number_of_tickets": "2",
                        "show_date": "2019-03-10",
                        "show_time": "23:30",
                        "show_type": "regular"
                    }
                }
            ],
            "result_arguments": [
                [
                    "price",
                    "show_type",
                    "theater_name",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ],
                [
                    "price",
                    "number_of_tickets",
                    "show_type",
                    "theater_name",
                    "show_time",
                    "show_date",
                    "genre",
                    "street_address",
                    "location",
                    "movie_name"
                ]
            ],
            "api_results": [
                "price, show_type, theater_name, genre, street_address, location, movie_name = findmovies(#genre='Sci-fi', #location='San Bruno', #theater_name='Century at Tanforan and XD')",
                "price, number_of_tickets, show_type, theater_name, show_time, show_date, genre, street_address, location, movie_name = buymovietickets(#location=location, #movie_name=movie_name, #number_of_tickets='2', #show_date='2019-03-10', #show_time='23:30', #show_type=show_type)"
            ],
            "middle_arguments": [
                "theater_name",
                "number_of_tickets",
                "movie_name",
                "street_address",
                "show_time",
                "show_date",
                "show_type",
                "genre",
                "location",
                "price"
            ],
            "user_aware_arguments": {
                "genre": "Sci-fi",
                "location": "San Bruno",
                "theater_name": "Century at Tanforan and XD",
                "number_of_tickets": "2",
                "show_date": "2019-03-10",
                "show_time": "23:30"
            }
        }
    },
    {
        "input": "Find me a music event in Los Angeles on March 5th that I can attend with 2 other people, and reserve 3 tickets for Aldous Harding at the Lodge Room at 5 pm for $30 each.",
        "output": {
            "used_app": [
                "Events",
                "Events"
            ],
            "used_api": [
                {
                    "findevents": {
                        "city": "Los Angeles",
                        "date": "2019-03-05",
                        "event_type": "Music"
                    }
                },
                {
                    "buyeventtickets": {
                        "city": "Los Angeles",
                        "date": "2019-03-05",
                        "event_name": "Aldous Harding",
                        "number_of_tickets": "3"
                    }
                }
            ],
            "result_arguments": [
                [
                    "event_type",
                    "event_name",
                    "date",
                    "time",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ],
                [
                    "event_name",
                    "date",
                    "time",
                    "number_of_tickets",
                    "price_per_ticket",
                    "city",
                    "venue",
                    "venue_address"
                ]
            ],
            "api_results": [
                "event_type, event_name, date, time, price_per_ticket, city, venue, venue_address = findevents(#city='Los Angeles', #date='2019-03-05', #event_type='Music')",
                "event_name, date, time, number_of_tickets, price_per_ticket, city, venue, venue_address = buyeventtickets(#city=city, #date=date, #event_name=event_name, #number_of_tickets='3')"
            ],
            "middle_arguments": [
                "number_of_tickets",
                "time",
                "event_type",
                "venue_address",
                "event_name",
                "price_per_ticket",
                "venue",
                "city",
                "date"
            ],
            "user_aware_arguments": {
                "city": "Los Angeles",
                "date": "2019-03-05",
                "event_type": "Music",
                "number_of_tickets": "3"
            }
        }
    },
    {
        "input": "Please help me search for a bus leaving from Las Vegas on March 2nd to San Diego, with no additional luggage, and purchase 3 tickets for the 10:50 am departure.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-02",
                        "from_city": "Las Vegas",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-02",
                        "departure_time": "10:50",
                        "from_city": "Las Vegas",
                        "num_passengers": "3",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-02', #from_city='Las Vegas', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-02",
                "from_city": "Las Vegas",
                "to_city": "San Diego",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "USER: I want to make a private payment request to Svetlana for $138 using my debit card.",
        "output": {
            "used_app": [
                "Payment",
                "Payment"
            ],
            "used_api": [
                {
                    "requestpayment": {
                        "amount": "138",
                        "private_visibility": "True",
                        "receiver": "Svetlana"
                    }
                },
                {
                    "makepayment": {
                        "amount": "48",
                        "payment_method": "debit card",
                        "private_visibility": "False",
                        "receiver": "Rachel"
                    }
                }
            ],
            "result_arguments": [
                [
                    "amount",
                    "receiver",
                    "private_visibility"
                ],
                [
                    "payment_method",
                    "amount",
                    "receiver",
                    "private_visibility"
                ]
            ],
            "api_results": [
                "amount, receiver, private_visibility = requestpayment(#amount='138', #private_visibility='True', #receiver='Svetlana')",
                "payment_method, amount, receiver, private_visibility = makepayment(#amount=amount, #payment_method='debit card', #private_visibility=private_visibility, #receiver=receiver)"
            ],
            "middle_arguments": [
                "private_visibility",
                "receiver",
                "amount",
                "payment_method"
            ],
            "user_aware_arguments": {
                "amount": "138",
                "private_visibility": "True",
                "receiver": "Svetlana",
                "payment_method": "debit card"
            }
        }
    },
    {
        "input": "I'd like to book two bus tickets with one-stop from Sacramento to Long Beach on March 11th at 7:40 am, without any additional luggage.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-11",
                        "from_city": "Sacramento",
                        "to_city": "Long Beach"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-11",
                        "departure_time": "07:40",
                        "from_city": "Sacramento",
                        "num_passengers": "2",
                        "to_city": "Long Beach"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='one-stop', #departure_date='2019-03-11', #from_city='Sacramento', #to_city='Long Beach')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "one-stop",
                "departure_date": "2019-03-11",
                "from_city": "Sacramento",
                "to_city": "Long Beach",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "Find a house with laundry service for 1 adult in Los Angeles, checking in on March 6th and checking out on March 8th, and book the house at 1020 South Figueroa Street with a rating of 4.1, and provide the contact number for the reservation.",
        "output": {
            "used_app": [
                "Hotels",
                "Hotels"
            ],
            "used_api": [
                {
                    "searchhouse": {
                        "has_laundry_service": "True",
                        "number_of_adults": "1",
                        "where_to": "Los Angeles"
                    }
                },
                {
                    "bookhouse": {
                        "check_in_date": "2019-03-06",
                        "check_out_date": "2019-03-08",
                        "number_of_adults": "1",
                        "where_to": "Los Angeles"
                    }
                }
            ],
            "result_arguments": [
                [
                    "where_to",
                    "number_of_adults",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ],
                [
                    "where_to",
                    "number_of_adults",
                    "check_in_date",
                    "check_out_date",
                    "rating",
                    "address",
                    "phone_number",
                    "total_price",
                    "has_laundry_service"
                ]
            ],
            "api_results": [
                "where_to, number_of_adults, rating, address, phone_number, total_price, has_laundry_service = searchhouse(#has_laundry_service='True', #number_of_adults='1', #where_to='Los Angeles')",
                "where_to, number_of_adults, check_in_date, check_out_date, rating, address, phone_number, total_price, has_laundry_service = bookhouse(#check_in_date='2019-03-06', #check_out_date='2019-03-08', #number_of_adults=number_of_adults, #where_to=where_to)"
            ],
            "middle_arguments": [
                "check_in_date",
                "total_price",
                "check_out_date",
                "where_to",
                "address",
                "phone_number",
                "has_laundry_service",
                "rating",
                "number_of_adults"
            ],
            "user_aware_arguments": {
                "has_laundry_service": "True",
                "number_of_adults": "1",
                "where_to": "Los Angeles",
                "check_in_date": "2019-03-06",
                "check_out_date": "2019-03-08"
            }
        }
    },
    {
        "input": "Please book 1 ticket without extra luggage on a bus leaving from Los Angeles on March 3rd at 6:40 am to San Francisco, arriving at Transbay Terminal station, departing from North Hollywood Station, and the cost is $51.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "departure_date": "2019-03-03",
                        "from_city": "Los Angeles",
                        "to_city": "San Francisco"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-03",
                        "departure_time": "06:40",
                        "from_city": "Los Angeles",
                        "num_passengers": "1",
                        "to_city": "San Francisco"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#departure_date='2019-03-03', #from_city='Los Angeles', #to_city='San Francisco')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "departure_date": "2019-03-03",
                "from_city": "Los Angeles",
                "to_city": "San Francisco",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I want to find a one-stop bus departing from Sacramento on March 4th to San Diego, with a departure time of 7:10 am and a ticket cost of $62, and I need to book 3 tickets for this journey.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "one-stop",
                        "departure_date": "2019-03-04",
                        "from_city": "Sacramento",
                        "to_city": "San Diego"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "False",
                        "departure_date": "2019-03-04",
                        "departure_time": "07:10",
                        "from_city": "Sacramento",
                        "num_passengers": "3",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='one-stop', #departure_date='2019-03-04', #from_city='Sacramento', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='False', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "one-stop",
                "departure_date": "2019-03-04",
                "from_city": "Sacramento",
                "to_city": "San Diego",
                "additional_luggage": "False"
            }
        }
    },
    {
        "input": "I'd like to search for a direct bus from Long Beach to Los Angeles on March 4th, with an additional luggage allowance.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-04",
                        "from_city": "Long Beach",
                        "to_city": "Los Angeles"
                    }
                },
                {
                    "buybusticket": {
                        "additional_luggage": "True",
                        "departure_date": "2019-03-04",
                        "departure_time": "06:00",
                        "from_city": "Long Beach",
                        "num_passengers": "1",
                        "to_city": "Los Angeles"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "additional_luggage",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-04', #from_city='Long Beach', #to_city='Los Angeles')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, additional_luggage, num_passengers, category = buybusticket(#additional_luggage='True', #departure_date=departure_date, #departure_time=departure_time, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "additional_luggage",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-04",
                "from_city": "Long Beach",
                "to_city": "Los Angeles",
                "additional_luggage": "True"
            }
        }
    },
    {
        "input": "Find a direct bus from Los Angeles to San Diego departing on March 13th for 4 people, with the option of leaving at 8:10 am for $26.",
        "output": {
            "used_app": [
                "Buses",
                "Buses"
            ],
            "used_api": [
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-13",
                        "from_city": "Los Angeles",
                        "to_city": "San Diego"
                    }
                },
                {
                    "findbus": {
                        "category": "direct",
                        "departure_date": "2019-03-13",
                        "from_city": "Los Angeles",
                        "num_passengers": "4",
                        "to_city": "San Diego"
                    }
                }
            ],
            "result_arguments": [
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ],
                [
                    "from_city",
                    "to_city",
                    "from_station",
                    "to_station",
                    "departure_date",
                    "departure_time",
                    "price",
                    "num_passengers",
                    "category"
                ]
            ],
            "api_results": [
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category='direct', #departure_date='2019-03-13', #from_city='Los Angeles', #to_city='San Diego')",
                "from_city, to_city, from_station, to_station, departure_date, departure_time, price, num_passengers, category = findbus(#category=category, #departure_date=departure_date, #from_city=from_city, #num_passengers=num_passengers, #to_city=to_city)"
            ],
            "middle_arguments": [
                "from_station",
                "to_station",
                "from_city",
                "departure_date",
                "num_passengers",
                "category",
                "departure_time",
                "price",
                "to_city"
            ],
            "user_aware_arguments": {
                "category": "direct",
                "departure_date": "2019-03-13",
                "from_city": "Los Angeles",
                "to_city": "San Diego"
            }
        }
    }
]